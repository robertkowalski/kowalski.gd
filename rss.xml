<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>robert kowalski</title>
        <description>robert kowalski - Robert Kowalski</description>
        <link>http://kowalski.gd</link>
        <link>http://kowalski.gd</link>
        <lastBuildDate>2016-02-10T13:36:13+00:00</lastBuildDate>
        <pubDate>2016-02-10T13:36:13+00:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>High Performance Erlang - Finding Bottlenecks in a CouchDB Cluster #1</title>
                <description>&lt;p&gt;Welcome to High Performance Erlang!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;High Performance Erlang&lt;/em&gt; is a series for developers who want
to deliver the best user experience for their applications. We will take a look
at different Erlang Open Source projects and improve their performance. The
articles are based on real world issues and explains how we fixed them.&lt;/p&gt;

&lt;h2&gt;Why Performance Matters&lt;/h2&gt;

&lt;p&gt;You might ask yourself: why should I care about performance? There are a lot of
reasons why we should care! When we are running an online shop the performance
of our shop will directly increase or decrease your revenue: Amazon found out
that 100ms of added latency cost them 1% of their profit. Google made a
similar observation in their tests:
&lt;a href=&quot;http://glinden.blogspot.de/2006/11/marissa-mayer-at-web-20.html&quot;&gt;a page that took .5 seconds longer had 20% less traffic and revenue&lt;/a&gt;. Mozilla increased the page load time for their Firefox
download page and was able to
&lt;a href=&quot;https://blog.mozilla.org/metrics/2010/04/05/firefox-page-load-speed-%E2%80%93-part-ii/&quot;&gt;increase their download conversion by 15% — which resulted in 60 million more downloads per year&lt;/a&gt;! Better performance will also result in less
operational costs for our services as we need less servers and resources to
run our business, especially when our deployment got a decent size.&lt;/p&gt;

&lt;p&gt;Other examples where milliseconds matter are Ad trading and High-frequency
trading. But even for a SAAS business with a freemium model performance is a
crucial feature, as a successful sale results from customer satisfaction over
time and a fast responsive service is an &lt;a href=&quot;http://services.google.com/fh/files/blogs/google_delayexp.pdf&quot;&gt;important corner stone of satisfaction&lt;/a&gt;.
Google’s search service even takes the performance of a site into account when
&lt;a href=&quot;http://googlewebmastercentral.blogspot.com/2010/04/using-site-speed-in-web-search-ranking.html&quot;&gt;deciding on the rank of search results&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Performance optimising Erlang&lt;/h2&gt;

&lt;p&gt;Our sample application today will be Apache CouchDB. We will work through
hands-on exercises based with real live examples.&lt;/p&gt;

&lt;p&gt;We will need to compile CouchDB in order to hack on it. I will list the
needed steps required for OSX and Ubuntu. If you already have compiled
CouchDB 2 on your system you can continue with the section &lt;a href=&quot;#Siege&quot;&gt;“Siege“&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Install Dependencies — Ubuntu&lt;/h3&gt;

&lt;p&gt;To compile CouchDB 2 on Ubuntu Trusty I had to install these dependencies:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ sudo apt-get install build-essential erlang-base \
  erlang-dev erlang-manpages erlang-eunit erlang-nox \
  libicu-dev libmozjs185-dev libcurl4-openssl-dev \
  pkg-config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Install Dependencies — OSX&lt;/h3&gt;

&lt;p&gt;OSX users have to install the Command Line Tools:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After installing the Command Line Tools we have to install the missing dependencies:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ brew install autoconf autoconf-archive automake libtool \
  erlang icu4c spidermonkey curl pkg-config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a id=&quot;Siege&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Siege&lt;/h3&gt;

&lt;p&gt;We’ll also install &lt;code&gt;siege&lt;/code&gt; to run a benchmark later in the article:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ brew install siege          # OSX users
$ sudo apt-get install siege  # Linux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Setting up CouchDB&lt;/h3&gt;

&lt;p&gt;Clone the development repository with our development branch:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ git clone -b high-perf-erlang-1 https://github.com/robertkowalski/couchdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to the CouchDB repo:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ cd couchdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;./configure&lt;/code&gt; with &lt;code&gt;--disable-docs --disable-fauxton&lt;/code&gt; to pull
in all the sub-repositories:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ ./configure --disable-docs --disable-fauxton
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compile the source with &lt;code&gt;make&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can try to boot a cluster now.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;./dev/run --with-admin-party-please
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CouchDB should output something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;[ * ] Setup environment ... ok
[ * ] Ensure CouchDB is built ... ok
[ * ] Prepare configuration files ... ok
[ * ] Start node node1 ... ok
[ * ] Start node node2 ... ok
[ * ] Start node node3 ... ok
[ * ] Check node at http://127.0.0.1:15984/ ... failed: [Errno socket error] [Errno 111] Connection refused
[ * ] Check node at http://127.0.0.1:25984/ ... ok
[ * ] Check node at http://127.0.0.1:35984/ ... ok
[ * ] Check node at http://127.0.0.1:15984/ ... ok
[ * ] Developers cluster is set up at http://127.0.0.1:15984.
Admin username: Admin Party!
Password: You do not need any password.
Time to hack! ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Great! In another terminal window we can test our installation by sending a HTTP request to the database:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ curl http://127.0.0.1:15984
{&amp;quot;couchdb&amp;quot;:&amp;quot;Welcome&amp;quot;,&amp;quot;version&amp;quot;:&amp;quot;a06d4c7&amp;quot;,&amp;quot;vendor&amp;quot;:{&amp;quot;name&amp;quot;:&amp;quot;The Apache Software Foundation&amp;quot;}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before we start analysing, we create a test database and document:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ curl -XPUT http://127.0.0.1:15984/animals
{&amp;quot;ok&amp;quot;:true}
$ curl -XPUT http://127.0.0.1:15984/animals/cat -d &amp;#39;{&amp;quot;name&amp;quot;: &amp;quot;gizmo&amp;quot;}&amp;#39;
{&amp;quot;ok&amp;quot;:true,&amp;quot;id&amp;quot;:&amp;quot;cat&amp;quot;,&amp;quot;rev&amp;quot;:&amp;quot;1-7becc1049568795707afe8c7d0c65aa3&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Awesome! CouchDB is up and running! Don’t forget to stop the server as we are going to make
changes to CouchDB now.&lt;/p&gt;

&lt;h2&gt;The Measure-Learn-Refactor-Loop&lt;/h2&gt;

&lt;p&gt;During the article we will follow an approach that I call the &amp;quot;Measure-Learn-Refactor-Loop&amp;quot;.&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin: 40px;&quot;&gt;
  &lt;img src=&quot;/assets/data/high-perf-erlang-1/measure-learn-refactor.png&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;As a first step we will investigate — right after a short initial analysis. Compared to an approach where we would write
long and detailed test plans upfront we get immediate feedback on our assumptions. Instead of trying to solve our
performance issues in a waterfall-like way, we will keep on iterating on our insights and learnings. Based on our first
insights we can make first decisions and spend our time in the most efficient way.&lt;/p&gt;

&lt;p&gt;You can’t fix problems you are not aware of. Just if we have identified a bottleneck in our application we are able to fix it. To confirm an improvement we will measure
again and are (hopefully!) be able to confirm a performance improvement. The new measurement will additionally lead to new
insights about new potential bottlenecks. The &lt;em&gt;Measure-Learn-Refactor-Loop&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;Decide on a component&lt;/h3&gt;

&lt;p&gt;No one can take a look on everything at once in a large, grown application.
Most of the time we will look through a small window on specific parts of our
system. The more the specific components are used, the more overall impact we
will have. At the beginning it makes sense to start with the low-hanging
fruits which usually have this big overall impact.&lt;/p&gt;

&lt;p&gt;Applications using CouchDB have probably a read-heavy usage pattern, because
that is a use case where CouchDB really shines. This might be different for
the applications you are trying to improve after reading the article, so you
should think a few moments about your application.&lt;/p&gt;

&lt;h3&gt;Erlang in flames — Measuring with Flamegraphs&lt;/h3&gt;

&lt;p&gt;CPU Flamegraphs are an excellent way to visualise where a program spends the
most time and where the hot paths of the code are located. Here is an example
flamegraph showing a request of the Mochiweb webserver:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/data/erlang-perf/mochi-flame-patched.svg&quot;&gt;
  &lt;img src=&quot;/assets/data/erlang-perf/mochi-flame-patched.svg&quot; alt=&quot;Mochiweb&quot;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;100% of the width of the box equals 100% of the spent CPU time.&lt;/p&gt;

&lt;p&gt;The y-axis
shows the stack depth: &lt;code&gt;bench_web_loop/2&lt;/code&gt; calls two functions:
&lt;code&gt;mochiweb_request:get/2&lt;/code&gt; and &lt;code&gt;mochiweb_request:respond/2&lt;/code&gt;, which each call
other functions afterwards. The called functions are displayed on top.
We see in our example that &lt;code&gt;mochiweb_request:respond/2&lt;/code&gt; calls
&lt;code&gt;mochiweb_request:format_response_header/2&lt;/code&gt; which then calls four other functions.&lt;/p&gt;

&lt;p&gt;Wide rectangles in the flamegraph signal functions
which consume more time. &lt;code&gt;mochiweb_request:respond/2&lt;/code&gt; consumes more CPU time
than &lt;code&gt;mochiweb_request:get/2&lt;/code&gt;.
To make sense of the shown flamegraph, it helps to take a look at the
&lt;a href=&quot;https://github.com/mochi/mochiweb/blob/f01872e2ac30e21a5bb41765fb14f49ec026be1e/support/templates/mochiwebapp_skel/src/mochiapp_web.erl#L26-L31&quot;&gt;corresponding sourcecode of the sample app used&lt;/a&gt; and the &lt;a href=&quot;https://github.com/mochi/mochiweb/blob/bd6ae7cbb371666a1f68115056f7b30d13765782/src/mochiweb_request.erl#L339&quot;&gt;underlying webserver code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can also get additional data by hovering the boxes in the &lt;a href=&quot;/assets/data/erlang-perf/mochi-flame-patched.svg&quot;&gt;SVG file&lt;/a&gt; and
clicking on them: the flamegraph for Mochiweb shows that the most time is
spent in &lt;code&gt;mochiweb_request:respond/2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A nice module to get the data needed to create Flamegraphs for Erlang applications is &lt;a href=&quot;https://github.com/proger/eflame&quot;&gt;eflame&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s hook &lt;code&gt;eflame&lt;/code&gt; into CouchDB by adding it to the file which defines our dependencies, &lt;code&gt;rebar.config.script&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-diff&quot; data-lang=&quot;diff&quot;&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/rebar.config.script b/rebar.config.script&lt;/span&gt;
&lt;span class=&quot;gh&quot;&gt;index 9f47eeb..8620792 100644&lt;/span&gt;
&lt;span class=&quot;gd&quot;&gt;--- a/rebar.config.script&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+++ b/rebar.config.script&lt;/span&gt;
&lt;span class=&quot;gu&quot;&gt;@@ -60,7 +60,8 @@ DepDescs = [&lt;/span&gt;
 {rexi,             &amp;quot;rexi&amp;quot;,             &amp;quot;a327b7dbeb2b0050f7ca9072047bf8ef2d282833&amp;quot;},
 {snappy,           &amp;quot;snappy&amp;quot;,           &amp;quot;ce24944752ff3a60ad2710f61d4cf709a1b31863&amp;quot;},
 {setup,            &amp;quot;setup&amp;quot;,            &amp;quot;b9e1f3b5d5a78a706abb358e17130fb7344567d2&amp;quot;},
&lt;span class=&quot;gd&quot;&gt;-{meck,             &amp;quot;meck&amp;quot;,             {tag, &amp;quot;0.8.2&amp;quot;}}&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+{meck,             &amp;quot;meck&amp;quot;,             {tag, &amp;quot;0.8.2&amp;quot;}},&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+{eflame,            {url, &amp;quot;https://github.com/proger/eflame&amp;quot;}, &amp;quot;b87703d65590f05069be42eb9ef74040d3c7ecdc&amp;quot;}&lt;/span&gt;
 ],

 BaseUrl = &amp;quot;https://git-wip-us.apache.org/repos/asf/&amp;quot;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have to run &lt;code&gt;./configure&lt;/code&gt; another time to pull in the new module:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ ./configure --disable-docs --disable-fauxton
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As database clients tend to read a lot from CouchDB, we will take a look at reading documents.
It sounds like a great area to have a big impact.&lt;/p&gt;

&lt;p&gt;CouchDB’s HTTP handler for operations on databases and documents are located in &lt;code&gt;src/chttpd/src/chttpd_db.erl&lt;/code&gt;. If a document is requested, it matches &lt;a href=&quot;https://github.com/apache/couchdb-chttpd/blob/417679a9cf2277693253d3f9c2ac0e52fa1ba75c/src/chttpd_db.erl#L607-L608&quot;&gt;this handler&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;db_req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;#httpd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path_parts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[_,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DocId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;db_doc_req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DocId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The delegation in the handler &lt;code&gt;db_req/2&lt;/code&gt; looks like a good place to create a flamegraph as we have a single entry point.&lt;/p&gt;

&lt;p&gt;We use &lt;code&gt;eflame:apply&lt;/code&gt;. Our data collection will start from this function:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;db_req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;#httpd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path_parts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[_,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DocId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;eflame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_doc_req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DocId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We should now verify that we have stopped any previously running CouchDB instances.&lt;/p&gt;

&lt;p&gt;As we already set up a database &lt;code&gt;animals&lt;/code&gt; and test-document &lt;code&gt;cat&lt;/code&gt; we can now run some commands that will:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;compile the modified CouchDB version&lt;/li&gt;
&lt;li&gt;boot CouchDB&lt;/li&gt;
&lt;li&gt;open a document that was saved in CouchDB (in a separate terminal window)&lt;/li&gt;
&lt;li&gt;convert the output generated by &lt;code&gt;eflame&lt;/code&gt; to an SVG-file&lt;/li&gt;
&lt;li&gt;open the SVG in our browser to inspect it&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ make                                  # compile the patched version
$ ./dev/run --with-admin-party-please   # boot dev cluster
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In another terminal window we enter now:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ curl http://localhost:15984/animals/cat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CouchDB answers:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{&amp;quot;_id&amp;quot;:&amp;quot;cat&amp;quot;,&amp;quot;_rev&amp;quot;:&amp;quot;1-7becc1049568795707afe8c7d0c65aa3&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;gizmo&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally we got a file called &lt;code&gt;stacks.out&lt;/code&gt; in our CouchDB sourcecode directory. It contains the samples
which we will convert to the graph:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;./src/eflame/stack_to_flame.sh &amp;lt; stacks.out &amp;gt; flame.svg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can open the SVG file using our favourite browser and inspect the
different areas by clicking on them:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/data/high-perf-erlang-1/flame-before.svg&quot;&gt;
  &lt;img src=&quot;/assets/data/high-perf-erlang-1/flame-before.svg&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Learn&lt;/h3&gt;

&lt;p&gt;On the left side of the graph we see the node of the cluster retrieving the requested document for us by calling
&lt;code&gt;chttpd_db:db_doc_req/3&lt;/code&gt;. When we hover with our mouse over the horizontal bar we see how long it takes: it takes CouchDB 11.48% of the time to get the document that it will send back to the client soon.&lt;/p&gt;

&lt;p&gt;The largest bar in the diagram is located in the middle in the diagram:
&lt;code&gt;couch_httpd:server_header/0&lt;/code&gt; which calls &lt;code&gt;couch_server:get_version/0&lt;/code&gt; takes 27.87% of the time.
Wait... &lt;code&gt;server_header&lt;/code&gt; and &lt;code&gt;get_version&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;A short search verifies: &lt;a href=&quot;https://github.com/robertkowalski/couchdb-couch/blob/a06d4c751491015c72520e62d89578b7290ea0ee/src/couch_httpd.erl#L980&quot;&gt;the function&lt;/a&gt; adds the current version of CouchDB to the HTTP
header.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/data/high-perf-erlang-1/terminal-header-arrow.png&quot;&gt;
  &lt;img src=&quot;/assets/data/high-perf-erlang-1/terminal-header-arrow.png&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CouchDB currently takes more time to put its current version into the
response-header than for reading a doc from disk!&lt;/p&gt;

&lt;p&gt;Let’s take a look at the &lt;code&gt;get_version/0&lt;/code&gt; function, which is located in &lt;code&gt;couch/couch_server.erl&lt;/code&gt;. The function receives
a full list of all loaded applications using &lt;code&gt;application:loaded_applications/0&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;get_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;Apps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loaded_applications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;keysearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;couch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Apps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{_,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;_,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Vsn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;Vsn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;quot;0.0.0&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Behind the scenes &lt;code&gt;loaded_applications/0&lt;/code&gt; uses an &lt;code&gt;ets:filter&lt;/code&gt; which takes a lot of the time. As soon as we have received a result we are running a keysearch on all results.&lt;/p&gt;

&lt;h3&gt;Refactor&lt;/h3&gt;

&lt;p&gt;One possible solution is to cache the version number, but there is an even simpler, very straightforward way: we can use
&lt;code&gt;application:get_key/2&lt;/code&gt; to receive the version number. The modified &lt;code&gt;get_version/0&lt;/code&gt; function looks like this now:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;get_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;couch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vsn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;0.0.0&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Important: before we will continue, we have to remove the &lt;code&gt;eflame:apply/2&lt;/code&gt; call that we used to create the flamegraph
from our &lt;code&gt;db_req&lt;/code&gt; handler!&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;Closing the circle: confirmation&lt;/h3&gt;

&lt;p&gt;Do you remember the graphic with the circle at the beginning of the article? We are now almost at the end of this
iteration.&lt;/p&gt;

&lt;p&gt;I started with benchmarking using my laptop, which is OK in my opinion, especially if you just get started and are not
sure if you will keep optimising and profiling. But in the long term a separate, dedicated machine just for benchmarking really pays off.&lt;/p&gt;

&lt;p&gt;To create reproducible benchmark results following this protocol has been very valuable to me:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Prevent all programs that run in the background from starting, e.g. Dropbox, Google Drive or also the
indexer that runs on OSX for the file search&lt;/li&gt;
&lt;li&gt;Compile the patched/unpatched version&lt;/li&gt;
&lt;li&gt;Reboot system&lt;/li&gt;
&lt;li&gt;Wait 60 seconds&lt;/li&gt;
&lt;li&gt;Boot CouchDB Cluster, wait 120 seconds&lt;/li&gt;
&lt;li&gt;Run Benchmarking tool&lt;/li&gt;
&lt;li&gt;Wait 90 seconds&lt;/li&gt;
&lt;li&gt;Repeat step 6 and 7 until I we have 10 benchmarks&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In order to run the benchmarks I had to tweak my OSX system: OSX only has
16k available ports and sockets idle per default 15 seconds until they are
released. I created &lt;code&gt;/etc/sysctl.conf&lt;/code&gt; set the timeout to 150ms:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;net.inet.tcp.msl=150
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I also had to raise the amount of the max open files. I had to create
&lt;code&gt;/Library/LaunchDaemons/limit.maxfiles.plist&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE plist PUBLIC &amp;quot;-//Apple//DTD PLIST 1.0//EN&amp;quot;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;        &amp;quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;Label&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;limit.maxfiles&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;ProgramArguments&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;array&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;launchctl&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;limit&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;maxfiles&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;524288&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;524288&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/array&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;RunAtLoad&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;ServiceIPC&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;false/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and reboot.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ulimit -a&lt;/code&gt; then shows after a reboot:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;core file size          (blocks, -c) 0
data seg size           (kbytes, -d) unlimited
file size               (blocks, -f) unlimited
max locked memory       (kbytes, -l) unlimited
max memory size         (kbytes, -m) unlimited
open files                      (-n) 524288
pipe size            (512 bytes, -p) 1
stack size              (kbytes, -s) 8192
cpu time               (seconds, -t) unlimited
max user processes              (-u) 709
virtual memory          (kbytes, -v) unlimited
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(right now I use OSX El Capitan)&lt;/p&gt;

&lt;p&gt;After running this protocol for the unpatched and modified version (without
the &lt;code&gt;eflame:apply&lt;/code&gt; call of course!) we should have quite reproducible results,
as we disabled all background processes that can eat a lot of our CPU power.
We also don’t have any unfreed memory or zombie processes running as we reboot
between the benchmarks for the patched and unpatched version.&lt;/p&gt;

&lt;p&gt;Running this protocol can be quite boring — so let’s automate most of it!&lt;/p&gt;

&lt;p&gt;Automating most of the process has other great improvements next to the fact
that it makes benchmarking less boring for us: less human errors and most
parts of our benchmarking process is documented in code for our colleagues.&lt;/p&gt;

&lt;p&gt;Here is the script:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;COUCHDB_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/couchdb
&lt;span class=&quot;nv&quot;&gt;BENCH_RUN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;siege -q -c120 -r400 -b http://127.0.0.1:15984/animals/cat&amp;quot;&lt;/span&gt;

sleep 60&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$COUCHDB_PATH&lt;/span&gt;/dev/run --with-admin-party-please &lt;span class=&quot;p&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$!&lt;/span&gt;
sleep 120

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; i in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;seq &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; 10&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Runnig test #$i:&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$BENCH_RUN&lt;/span&gt;
  sleep 90
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;kill&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$pid&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;\a&amp;#39;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# beep to signal we are finished&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We should get results for the &lt;a href=&quot;/assets/data/high-perf-erlang-1/bench-unoptimized.txt&quot;&gt;unpatched version&lt;/a&gt; and after a reboot and
a fresh run of the benchmark script the results for the
&lt;a href=&quot;/assets/data/high-perf-erlang-1/bench-optimized.txt&quot;&gt;patched version&lt;/a&gt;. We can put the results into a table:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;optimized (secs)&lt;/td&gt;&lt;td&gt;unoptimized (secs)&lt;/td&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;#1&lt;/td&gt;&lt;td&gt;38,47&lt;/td&gt;&lt;td&gt;44,61&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;#2&lt;/td&gt;&lt;td&gt;39,87&lt;/td&gt;&lt;td&gt;43,35&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;#3&lt;/td&gt;&lt;td&gt;39,76&lt;/td&gt;&lt;td&gt;44,53&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;#4&lt;/td&gt;&lt;td&gt;37,78&lt;/td&gt;&lt;td&gt;44,88&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;#5&lt;/td&gt;&lt;td&gt;38,16&lt;/td&gt;&lt;td&gt;44,47&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;#6&lt;/td&gt;&lt;td&gt;40,02&lt;/td&gt;&lt;td&gt;43,09&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;#7&lt;/td&gt;&lt;td&gt;40,00&lt;/td&gt;&lt;td&gt;43,37&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;#8&lt;/td&gt;&lt;td&gt;40,11&lt;/td&gt;&lt;td&gt;44,40&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;#9&lt;/td&gt;&lt;td&gt;39,97&lt;/td&gt;&lt;td&gt;43,48&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;#20&lt;/td&gt;&lt;td&gt;41,92&lt;/td&gt;&lt;td&gt;44,63&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;SUM (secs)&lt;/td&gt;&lt;td&gt;396,06&lt;/td&gt;&lt;td&gt;440,81&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;We can also visualise the results in a diagram:&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin: 40px;&quot;&gt;
  &lt;a href=&quot;/assets/data/high-perf-erlang-1/graph.png&quot;&gt;
    &lt;img src=&quot;/assets/data/high-perf-erlang-1/graph.png&quot; /&gt;
  &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;We see that every run of the patched, optimised version is faster.&lt;/p&gt;

&lt;p&gt;Looks like the patched version is about 46 seconds faster if we sum up the times of the almost 500.000
requests. That’s a lot!&lt;/p&gt;

&lt;p&gt;As a last step we also create a new flamegraph.
The &lt;a href=&quot;/assets/data/high-perf-erlang-1/flame-after.svg&quot;&gt;new flamegraph&lt;/a&gt; should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/data/high-perf-erlang-1/flame-after.svg&quot;&gt;
  &lt;img src=&quot;/assets/data/high-perf-erlang-1/flame-after.svg&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;couch_server:get_version/0&lt;/code&gt; was consuming a lot of CPU time before our
optimisation and isn’t visible any more. As one of the main consumer of CPU
time got optimised, the graph shows other main consumer now. Creating the second
flamegraph allows us to verify our benchmark and assumptions on the
performance improvement. It also shows us immediately the next bottleneck,
which we will investigate in the next article.&lt;/p&gt;

&lt;h2&gt;Wrapping up&lt;/h2&gt;

&lt;p&gt;Inefficient lookups are quite common, we often catch them early during a code
review. Sometimes they slip through the review process which isn’t necessarily
a problem, but in rare conditions they are located in the hot path, the code
that gets executed the most often and that makes them harmful. In this case we
are able to measure an &lt;strong&gt;8%&lt;/strong&gt; improvement in performance after the refactor for
a reading operation. The bottleneck we have found basically affects every HTTP
request, as CouchDB reports its version not only in case of a read.&lt;/p&gt;

&lt;p&gt;If we would have focussed on writing long detailed test plans instead of measuring we
probably would have focussed on the B-Tree or other parts of the system.
At least I would have never assumed that getting the version of the current
CouchDB release is a major performance issue in the project and additionally
has a very high overall impact.&lt;/p&gt;

&lt;p&gt;The second flame graph we created immediately makes the
next bottleneck visible. We will take a look at it in the next article. The
original PR for this article is available at
&lt;a href=&quot;https://github.com/apache/couchdb-couch/pull/56&quot;&gt;https://github.com/apache/couchdb-couch/pull/56&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Did you like the article? I wrote a book about successful CLI design:
&lt;a href=&quot;http://theclibook.com&quot;&gt;http://theclibook.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apache CouchDB is an Open Source Project under Apache 2.0 License. The code used in this article is from Apache CouchDB, licensed under Apache License, Version 2.0, January 2004. For details, see: &lt;a href=&quot;https://github.com/apache/couchdb/blob/master/LICENSE&quot;&gt;https://github.com/apache/couchdb/blob/master/LICENSE&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg07.met.vgwort.de/na/788b22edd5224023ad7136844cea158b&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/high-performance-erlang-finding-bottlenecks-couchdb-1</link>
                <guid>http://kowalski.gd/blog/high-performance-erlang-finding-bottlenecks-couchdb-1</guid>
                <pubDate>2016-02-10T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Software development in Cuba</title>
                <description>&lt;p&gt;Some weeks ago I was attending the Python Unconference in Hamburg. It was an amazing community event, I had a lot of fun and met many awesome people. Pablo, an Open Source enthusiast from Cuba gave a keynote about the state of software development, Open Source and the web in Cuba. In Cuba the daily life and software development is quite different to Germany or the US. There is no mobile web, there is no internet at home. There are a few exceptions given you work in health care or education, but it is not the majority. Repeat after me: no internet at home, no mobile web. The usual way you can access the internet is at work or in the university.&lt;/p&gt;

&lt;p&gt;Even if you made it into the internet most doors will stay closed for you. Many Open Source producing companies are based in the US and the US embargo applies to them. You can’t just open the forums and wiki pages from e.g. the Fedora project, which is backed by Red Hat.&lt;/p&gt;

&lt;p&gt;The internet itself is limited to special places and as it is so hard to obtain Open Source software, the cuban software developers usually have to meet in person to get Open Source software. Around 20 years ago we did the same in Germany as pupils, but for different reasons: internet was very expensive in those times in Germany.&lt;/p&gt;

&lt;p&gt;The cuban developer community runs several mailing lists and websites. One of them is a wiki which contains a lot of home addresses from people that are able to share Open Source software to others, e.g. Ubuntu 14. To get the software you just visit the person listed in the wiki at their home to get a copy.&lt;/p&gt;

&lt;p&gt;When you are born in Cuba it is also quite hard to visit conferences. Unlike us, they can’t just take a plane to other countries and attend a conference.&lt;/p&gt;

&lt;p&gt;The talk ended with an announcement: Pablo and other members of the cuban developer community had an awesome idea. Why not make an Unconference in Cuba instead of the rich countries? They are organizing the &lt;a href=&quot;http://www.cubaconf.org/&quot;&gt;http://www.cubaconf.org/&lt;/a&gt; which takes place on the 25-27th April 2016 in Havana.&lt;/p&gt;

&lt;p&gt;I will definitely attend, so see you all in Cuba!&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/software-development-in-cuba</link>
                <guid>http://kowalski.gd/blog/software-development-in-cuba</guid>
                <pubDate>2015-10-09T00:00:00+01:00</pubDate>
        </item>

        <item>
                <title>What happened while contributing to Open Source on a daily basis for one year</title>
                <description>&lt;p&gt;I recently achieved a 356 day GitHub streak and I wanted to blog why I started to commit every day and what it changed in my life.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/robertkowalski&quot;&gt;&lt;img src=&quot;/assets/images/2015-03-02-what-happened-while-contributing-to-open-source-on-a-daily-basis-for-one-year/streak.png&quot; alt=&quot;streak&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The rules I had for making a contribution were easy:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;every contribution must make sense and must have an impact. I can make white-space fixing commits, but they don’t count as a contribution with impact&lt;/li&gt;
&lt;li&gt;it must be Open Source&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Starting a bit earlier in summer 2013 than John Resig who wrote on his &lt;a href=&quot;http://ejohn.org/blog/write-code-every-day/&quot;&gt;blog&lt;/a&gt; about contributing on a daily basis, my first attempts failed. His post definitely spured me and also showed me that I am not alone.&lt;/p&gt;

&lt;p&gt;I had the same reasons like John: I love my side projects but I was unhappy trying to work on them the whole weekend to get them finished. Sometimes I also spent a full evening during the week, until deep in the night, but it did not help: the timeframe between the days I was working on my side project was too big, I often forgot what I was working on and what my next idea for the project was. It always took a long time to get back into the project. Additionally I didn’t want to work two full days during the weekend on side projects as I also want to spend time with my friends and have to relax from sitting in front of a laptop from time to time.&lt;/p&gt;

&lt;p&gt;The other reason for starting to contribute on a daily basis was that I was assuming that it would probably improve my skills.&lt;/p&gt;

&lt;h2&gt;The good&lt;/h2&gt;

&lt;h3&gt;Improved organizing of my spare time&lt;/h3&gt;

&lt;p&gt;The whole planning of my spare time changed. Better said I started to plan and organize my spare time. Before that I did not really think about the time after work. After finishing my day job I suddenly (surprise, surprise!) had some spare time and had no idea what to do with it. These days I have&lt;/p&gt;

&lt;h3&gt;Skill improvement&lt;/h3&gt;

&lt;p&gt;Working every day with code that I did not see at my daily work really improved my skills. I added new languages to my portfolio as I learned Erlang and wrote my first program in Scheme. I still write Erlang.&lt;/p&gt;

&lt;p&gt;I also learned a lot how larger Open Source projects work, organize themselves and why Open Source makes sense for companies (I would even say for every company, but that’s another blogpost). I am not saying developing your product without any parts that are open sourced is not earning money, but in my opinion it is possible for every product to have a large amount of Open Source components and make money anyway and benefit from better code in the long term.&lt;/p&gt;

&lt;p&gt;Additionally I improved my knowledge and skills on countless topics, some of them are: parsing &amp;amp; lexing, distributed computing, architecture, security, fast switching between projects (and coding guidelines), understanding code and giving reviews. I was also able to improve my soft-skills as well: communication, teamwork, solving conflicts, mentoring and skills in dealing with difficult/unexpected situations are a few of them.&lt;/p&gt;

&lt;h3&gt;A new job&lt;/h3&gt;

&lt;p&gt;When I started, I had many own small side projects that were fun, but at some point I wasn’t happy any more with them - no one forked it and it seemed nobody used them. As I was the only developer for them I had no buddies to discuss solutions or a way to get reviews which is a great way to improve the code and your skills.&lt;/p&gt;

&lt;p&gt;I decided to submit code to bigger projects and as I was using node since 0.4 and was a daily npm user I submitted a patch to npm. Isaac Schlueter reviewed my first PR, was really nice and it resulted in me submitting a lot of more code for npm.&lt;/p&gt;

&lt;p&gt;The npm registry is using CouchDB as a database but I did not know how to use it. I started to translate the CouchDB documentation to German, this way I could learn how to use CouchDB and help the project. One day I had the idea of hosting my own private registry, and at one point I had the CouchDB source code on my hard disk as I wasn’t sure why the registry did not boot. While clicking through the code I saw that CouchDB had a JavaScript MVC app which was not officially released. I started contributing to CouchDB on a day where my PRs for npm queued up and I did not want to submit more: I did not want to make it harder for the reviewers once they got time to take a look. I contributed more to CouchDB as they were really nice folks.&lt;/p&gt;

&lt;p&gt;Sometimes npm had bugs and problems which where directly related to Node.js. So I started contributing to the Node.js project, too.&lt;/p&gt;

&lt;p&gt;Joining all these projects, getting reviews, collaborating with many different other contributors, reading a lot of code others wrote, reviewing patches, talking with users and working on their issues really boosted my skills.&lt;/p&gt;

&lt;p&gt;In 2014 I was lucky enough and got a job where I get paid for working on the Open Source project CouchDB.&lt;/p&gt;

&lt;h3&gt;Making new friends&lt;/h3&gt;

&lt;p&gt;I made a ton of new friends from the tech community by working on Open Source. I met many other collaborators which were working on the same project or folks which were using the project I was working on. Many of them are much smarter than me and at least for the projects I worked on I can say that they are all incredibly nice, open-minded people.&lt;/p&gt;

&lt;p&gt;They are the reason why I submitted more patches after sending my initial PR. I don’t think anyone is interested in spending their spare time (and even their work time) to join a hostile, bad environment.&lt;/p&gt;

&lt;h2&gt;The bad&lt;/h2&gt;

&lt;p&gt;Contributing every day and really sticking to it wasn’t smooth sailing all the time. I think the most discouraging events are users with weird expectations regarding the Open Source product they consume for free that folks maintain in their spare time.&lt;/p&gt;

&lt;p&gt;This example is from &lt;a href=&quot;https://github.com/npm/npm/issues/2568&quot;&gt;an issue in npm&lt;/a&gt; where I used to do a lot of stuff in my spare time, together with Domenic, who also spent many hours of his spare time on maintaining npm:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2015-03-02-what-happened-while-contributing-to-open-source-on-a-daily-basis-for-one-year/work-harder.png&quot; alt=&quot;user says work harder&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Deciding to contribute every day to Open Source Software changed my life in many ways. I get payed to work on Open Source now, made many new friends in a lot of projects and improved my skills.&lt;/p&gt;

&lt;p&gt;I would love to see companies supporting their employees more for contributing to Open Source Software - 99.99% of them rely on Open Source Software, e.g. for their dev-tooling, directly for their products or in most cases even in both ways. Sadly it is quite hard for most employees to work on Open Source Software during their work time and not everyone is privileged enough to spend ~1hr of their spare time every day to work on Open Source Software.&lt;/p&gt;

&lt;p&gt;Several other folks like &lt;a href=&quot;http://blog.getify.com/learned-on-a-1-year-github-streak/&quot;&gt;Kyle Simpson&lt;/a&gt; and &lt;a href=&quot;http://mlafeldt.github.io/blog/write-every-day/&quot;&gt;Mathias Lafeldt&lt;/a&gt; started similar projects - it seems it also changed their life and the way they see the world and I am eager for the future.&lt;/p&gt;

&lt;p&gt;Update: there is now a &lt;a href=&quot;http://www.labazhou.net/2015/03/what-happened-while-contributing-to-open-source-on-a-daily-basis-for-one-year/&quot;&gt;chinese translation&lt;/a&gt; available!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/73a3ecc5b1564287922d511acb38a381&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/what-happened-while-contributing-to-open-source-on-a-daily-basis-for-one-year</link>
                <guid>http://kowalski.gd/blog/what-happened-while-contributing-to-open-source-on-a-daily-basis-for-one-year</guid>
                <pubDate>2015-03-02T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>How to organize an event?</title>
                <description>&lt;p&gt;Andy and I recently organized the first &lt;a href=&quot;http://day.couchdb.org/&quot;&gt;CouchDB Day in Hamburg&lt;/a&gt;. Having more CouchDB Days would be quite awesome, but &lt;a href=&quot;https://twitter.com/awenkhh&quot;&gt;Andy&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/robinson_k&quot;&gt;me&lt;/a&gt; work as volunteers in our spare time and we don&amp;#39;t scale that much :) - same for the &lt;a href=&quot;http://jsunconf.eu&quot;&gt;JS Unconf&lt;/a&gt; that I am organizing. In this post I want to share some insights regarding the organization of events. In general this guide is not limited to CouchDB or JavaScript - you can switch it with every other Open Source project or topics related to IT.&lt;/p&gt;

&lt;p&gt;Organizing a (un)conference is much work, but it is also a lot of fun and a rewarding experience.&lt;/p&gt;

&lt;h2&gt;Decide on team size&lt;/h2&gt;

&lt;p&gt;A smaller team means faster decisions but sharing of tasks is limited. I suggest that you are at least 2 persons, as you can help each other and I think you get a better event as you both are taking care and have ideas. Having a larger team means sometimes much more time for finding a solution where everybody agrees on, but you can share more tasks over an amount of people.&lt;/p&gt;

&lt;h2&gt;Event length &amp;amp; expected amount of attendees&lt;/h2&gt;

&lt;p&gt;We decided to have the CouchDB Day for one day. Food and location are always the biggest expenses. That means if you decide on having a two day conference instead of one day, you will almost double your expenses.&lt;/p&gt;

&lt;p&gt;That means the count of attendees and the length of the event directly relates to your costs (and the amount of sponsors you will need).&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;CouchDB Day    100 attendees   1 day     6.000€
JS Unconf      300 attendees   2 days   40.000€
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Choose a ticket price&lt;/h2&gt;

&lt;p&gt;If you decide on taking a small amount of money for the event you will decrease the no-show-rate. I also organize JS Unconf and the tickets cost 42-120€ for two days, including food and parties. This is quite cheap (just covering a very small part of the expenses) but the fact that you have to &amp;quot;buy&amp;quot; the ticket leads to many folks showing up even if it is raining outside.&lt;/p&gt;

&lt;p&gt;Fun fact: after talking to other conference organizers which have ticket prices at 300-1.200€ it seems the price does not really matter. As long as the attendees pay &lt;strong&gt;something&lt;/strong&gt; the no-show-rate is usually 15% and it does not matter if the ticket costs 1.000€ or 42€.&lt;/p&gt;

&lt;p&gt;For our free event we had a 30% rate - we lowered the rate a bit by sending emails before the event to all attendees asking them to cancel their ticket if they can&amp;#39;t make it to the day.&lt;/p&gt;

&lt;h2&gt;Food&lt;/h2&gt;

&lt;p&gt;Make sure to ask attendees when buying their ticket if they have dietary requirements. The CouchDB Day had almost 50% vegetarians and vegans! Asking for it when they get the ticket makes it easier for you to plan the ratio of food needed.&lt;/p&gt;

&lt;p&gt;As I just spend money I already got from sponsors food is the second thing after the location that I am trying to buy. It is also the most expensive part of the event.&lt;/p&gt;

&lt;p&gt;If you have bad luck and can&amp;#39;t afford food it&amp;#39;s also no problem, but the location should be next to some restaurants.&lt;/p&gt;

&lt;h2&gt;Take care of diversity and a CoC&lt;/h2&gt;

&lt;p&gt;For JS Unconf 2015 and CouchDB Day we have a budget for diversity tickets. 100-150€ for travel plus a free ticket is a good amount to enable people that could not afford otherwise to join the event.&lt;/p&gt;

&lt;p&gt;Please also take care of a Code of Conduct. It shouldn&amp;#39;t be just a link on your website, I suggest that you also mention it at the beginning of the event in your moderation and give a short explanation. Conferences should be a safe space for everyone.&lt;/p&gt;

&lt;p&gt;You should also wear event T-Shirts that makes it easy for attendees to spot you in the crowd if they need help or have questions, you can also announce that in the beginning.&lt;/p&gt;

&lt;h2&gt;Get sponsors&lt;/h2&gt;

&lt;p&gt;You will need sponsors for the event. The deal for the CouchDB Day was:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt; * Banner with link on our website at http://day.couchdb.org/
 * place for a Rollout-Banner at the event day
 * A table for offering, t-shirts, info material and goodies
 * your logo on the sponsor slide

1.000€ + VAT (19%)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a one day event in Germany a budget of 6000€ is a good indicator, but it depends on your needs. We started with one-two sponsors and as we got more sponsors, we added more features to the event (like food, a photographer etc.).&lt;/p&gt;

&lt;p&gt;I strictly just spent money that we already had in the past years and had good experiences with it. Sometimes it can happen that you are not able to spend all the money as you don&amp;#39;t have enough time before the event (e.g. last minute sponsoring one week before the event) - but you still can keep the money for next year. If there is no following event you can donate the money to organizations like the &lt;a href=&quot;https://adainitiative.org/&quot;&gt;Ada Initiative&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Party&lt;/h2&gt;

&lt;p&gt;If you have money left, having a party in the evening is cool!&lt;/p&gt;

&lt;p&gt;Organizing the party is easy, but there are a few things you should take care of: many attendees are not drinking alcohol at all, you should definitely offer softdrinks if you are offering beer for free. If you are also offering cocktails it is nice to have free non-alcoholic cocktails, too.&lt;/p&gt;

&lt;p&gt;We usually have the party in a bar not too far away from the event-location.&lt;/p&gt;

&lt;p&gt;I had bad experiences with vouchers for drinks in the past years, you have to take care everyone gets an amount of vouchers - and additionally as there is also a no-show rate at the party or some are leaving early it seems that you are often paying 500€ for vouchers, but just a few are used. It seems to me that it is easier to pay a specific amount to a bar and the attendees just show their badge for a free drink.&lt;/p&gt;

&lt;p&gt;For a party after an event which has 100 during the day you can get pretty far with 500€ in the evening, depending on the price for a beer or softdrink. JS Unconf - which has 300 attendees and happens on Saturday and Sunday - has a budget of 500€ on Friday for our Warmup Party and 1.500€ for the main party on Saturday. Of course it is also possible to spend 1000€ with just 30-40 persons that are attending the party.&lt;/p&gt;

&lt;h2&gt;Add nice extras&lt;/h2&gt;

&lt;p&gt;If there is money left, spending it for a photographer is a good idea. Creating a Moodfilm which captures the atmosphere of the event is also nice if you have some money left. Both will help you and the attendees to remember how cool your event was.&lt;/p&gt;

&lt;h2&gt;For events regarding Open Source projects: contact the maintainers&lt;/h2&gt;

&lt;p&gt;Many Open Source projects have a trademark: CouchDB, Node.js and npm are all trademarked. Please contact the maintainers and explain your event to them. For CouchDB we contacted the CouchDB PMC with the initial idea and shared our logo designs. We got some nice tips from the PMC regarding our event, they even got a small &lt;a href=&quot;https://cwiki.apache.org/confluence/display/COUCHDB/Guidelines+for+creating+a+CouchDB+Event&quot;&gt;guideline page for events&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;Boring legal stuff to take care of&lt;/h2&gt;

&lt;p&gt;You probably want some kind of insurance for your attendees. At least in Germany it is a good idea to have an insurance that will pay if bad things happen, like a lamp is falling down on an attendee. It costs around 150-300€ for 100-400 attendees.&lt;/p&gt;

&lt;p&gt;As you are earning money and spending money you will need to think about your tax requirements. Can a company you are friends with help you regarding that? Are you organizing a lot of events and creating a foundation makes sense for you?&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Organizing an event is a lot of work but it is not that hard! If you are organizing an event you can talk to other organizers and ask questions and share experiences.&lt;/p&gt;

&lt;p&gt;I would be really happy if we see a CouchDB Day or JS Unconf in other parts of the world!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/b6fde22d173d488886df0fd9df55b173&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/how-to-organize-an-event</link>
                <guid>http://kowalski.gd/blog/how-to-organize-an-event</guid>
                <pubDate>2015-02-23T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Choosing the right stack: why we chose Hapi, CouchDB and Ansible</title>
                <description>&lt;p&gt;Since 2014 we are organizing the &lt;a href=&quot;http://jsunconf.eu&quot;&gt;JS Unconf&lt;/a&gt;. The edition for 2015 takes place in Hamburg on the 25th and 26th of April and tickets are currently on sale. It’s an Unconference with the main focus on JavaScript and Node.js but also community, health, workflow and workplace (and many more!) are topics. The two mornings of the event everyone attending will vote on each talk submitted. The team then creates a schedule based on the talks which got the most votes.&lt;/p&gt;

&lt;p&gt;To make the voting easier and faster we are hosting &lt;a href=&quot;http://contriboot.jsunconf.eu/&quot;&gt;an application&lt;/a&gt; where attendees which are also possible speakers can submit a talk. It is also possible to submit an interest and to answer an interest with a talk. There is also a small „+1“ button for visitors, they are not used in the final voting but help everyone who submitted a talk to see a tendency regarding the interest for the topic. One day before the Unconference we are printing all submissions for the voting. It is still possible to submit something ad-hoc using a pencil during both days but the pre-printed submissions are making our job a bit easier.&lt;/p&gt;

&lt;h2&gt;Our requirements&lt;/h2&gt;

&lt;p&gt;We wanted to focus on these topics for this year:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;high availability and possibility to fail-over&lt;/li&gt;
&lt;li&gt;high level of automation&lt;/li&gt;
&lt;li&gt;easy setup for our friends from other Unconference teams&lt;/li&gt;
&lt;li&gt;easy deployments&lt;/li&gt;
&lt;li&gt;easy testing, next to selenium-based integration tests&lt;/li&gt;
&lt;li&gt;easy theming, as we are using a different design each year&lt;/li&gt;
&lt;li&gt;easy backups&lt;/li&gt;
&lt;li&gt;no vendor-lock-in where it takes hours and hours to switch the platform&lt;/li&gt;
&lt;li&gt;cheap operation, we don’t want to pay &amp;gt; $100/month for hosting &amp;amp; services&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The nice thing is that I am not alone this year and we are able to do a lot of pair-programming :)&lt;/p&gt;

&lt;h2&gt;Deciding on technologies and app setup&lt;/h2&gt;

&lt;h3&gt;Why Hapi?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://hapijs.com/&quot;&gt;Hapi&lt;/a&gt; is a battle tested framework for Node.js made by Walmart. It is backed by a core team which get’s paid to maintain it and the framework is Open Source. Even during Black Friday the US Walmart’s Hapi.js servers are humming along nicely, the graphs they posted on twitter are so boring (which is a good thing) as they are basically all showing flat lines of minimal load.&lt;/p&gt;

&lt;p&gt;Reported bugs are getting fixed immediately, the support is really great - also if you have questions. It has a nice and helpful community and great testing support for unit tests. Hapi has an awesome plugin system and the large amount of official plugins (e.g monitoring, logging, OAuth) is very well maintained.&lt;/p&gt;

&lt;p&gt;The only thing I am not sure about is the configuration-over-convention approach of Hapi, many developers prefer convention-over-configuration. But after starting with Hapi it turned out that the configuration-based approach made the implementation of our requirement „theming“ quite easy.&lt;/p&gt;

&lt;h4&gt;Helps us regarding:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;high availability&lt;/li&gt;
&lt;li&gt;easy testing&lt;/li&gt;
&lt;li&gt;easy theming&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Why CouchDB?&lt;/h3&gt;

&lt;p&gt;I was quite late to the party but since I discovered CouchDB I really love the database. It is a perfect fit for the submissions as the usage characteristics for our app are a lot reading requests and just a few writing requests. Given CouchDB’s outstanding abilities regarding replication it’is very easy to replicate our data between servers and datacenters (basically one click in the Admin-Dashboard or one curl request to the API).&lt;/p&gt;

&lt;p&gt;As it is all JSON it’s really easy for us as JS developers to write export scripts. We need the submissions printed at the Unconference for the voting and as someone who enjoys writing JS it’s more fun to create a CSV based on JSON instead of a SQL-dump.&lt;/p&gt;

&lt;p&gt;A nice Bonus is the REST HTTP API of CouchDB - we get a REST API  for free.&lt;/p&gt;

&lt;h4&gt;Helps us regarding:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;high availability and possibility to fail-over&lt;/li&gt;
&lt;li&gt;easy backups&lt;/li&gt;
&lt;li&gt;no vendor-lock-in where it takes hours and hours to switch the platform&lt;/li&gt;
&lt;li&gt;cheap operation, we don’t want to pay &amp;gt; $100/month for hosting &amp;amp; services&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Why Ansible?&lt;/h3&gt;

&lt;p&gt;We want to have as much as our infrastructure easy and fast to setup. A server should be in a well defined state that can be automatically reproduced. I think it was Kris Köhntopp who once said something like: „If you have to manually login to your server to fix a problem, you did not automate enough tasks“. I think a common term I heard in the last years is „Infrastructure as Code“ regarding that topic, I already used Puppet and Chef in other setups and started using Ansible recently. I really like Ansible as it is really easy and fast to get started and I don’t need to setup a Puppetmaster or Chef-Server. I know that there is also chef-solo et al, but using a lightweight Ansible client I always had the feeling that I was moving faster. Writing everything in YAML felt a bit weird in the beginning but after a while I really enjoyed it.&lt;/p&gt;

&lt;h4&gt;Helps us regarding:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;high level of automation&lt;/li&gt;
&lt;li&gt;easy setup for our friends from other Unconference teams&lt;/li&gt;
&lt;li&gt;easy deployments&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;App setup&lt;/h3&gt;

&lt;p&gt;After some discussion we decided on a quite common architecture:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;                              +-----------+
                              |           |      +--------+
                      +-------&amp;gt;  App      |      |        |
+----------------+    |       |           +------&amp;gt;        |
|                |    |       +-----------+      |        |
|  Load Balancer +----+                          |   DB   |
|                +----+       +-----------+      |        |
+----------------+    |       |           +------&amp;gt;        |
                      +-------&amp;gt;  App      |      |        |
                              |           |      +--------+
                              +-----------+
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We are currently running with two application servers but as they are stateless we could add more easily. This setup allows us to scale horizontally by adding more servers. As Hapi (and most other Node.js frameworks) is not using the &lt;a href=&quot;http://nodejs.org/api/cluster.html&quot;&gt;cluster module of Node.js&lt;/a&gt; for using multiple CPUs the cheap single-CPU boxes of DigitalOcean are perfect for us ($5/month each). Our LB is also running on one of them.&lt;/p&gt;

&lt;p&gt;We are running plain Ubuntu as we (currently &lt;a href=&quot;https://github.com/robin-drexler&quot;&gt;Robin&lt;/a&gt; and me are developing the app) are used to Debian systems - Ubuntu is a nice choice for us as it provides easier access to newer packages. For Node.js we are using the famous Ubuntu PPA from Chris Lea.&lt;/p&gt;

&lt;p&gt;We decided against hosting CouchDB on our own and decided for Cloudant, who are hosting clustered CouchDBs as a service. If we ever decide to host CouchDB on our own we can make use of the replication feature that I already mentioned to move our data away.&lt;/p&gt;

&lt;p&gt;When we started our application we met 1-2x / week. Initially we had to do a lot of grunt work. We spent some time on the automatic bootstrap of a test-system with a new database for local development and selenium tests. When you kick off a dev system using &lt;a href=&quot;https://github.com/jsunconf/contriboot/blob/master/package.json#L11&quot;&gt;npm run dev&lt;/a&gt; we fill a &lt;a href=&quot;https://github.com/jsunconf/contriboot/blob/master/bootstrap.js#L13&quot;&gt;development database with fixtures&lt;/a&gt; and push all of our views to a local &lt;a href=&quot;https://github.com/jsunconf/contriboot/blob/master/bootstrap.js#L62&quot;&gt;CouchDB&lt;/a&gt;. After that we compile our less to CSS and watch for any changes. If there are any changes, we &lt;a href=&quot;https://github.com/jsunconf/contriboot/blob/master/Gulpfile.js&quot;&gt;automatically regenerate the less/restart the server&lt;/a&gt;. The bootstrap-code, including the selenium runner is the oldest part of the system and needs a refactoring soon.&lt;/p&gt;

&lt;p&gt;While it cost some hours to get bootstrapped it definitely paid off in the end! We are able to deploy quite confident that we don’t break anything because we missed some edge cases we did not click through manually each time we make a (temporary) change.&lt;/p&gt;

&lt;p&gt;When we fix a bug we add a test case to avoid any regressions in the future. After we had some boring hours when we started, we are now quite fast at implementing all kinds of serious changes, like &lt;a href=&quot;https://github.com/jsunconf/contriboot/commit/81c89dcdbaab2aeae15fe69b46ab145b15da37ad&quot;&gt;switching the DB client&lt;/a&gt; and &lt;a href=&quot;https://github.com/jsunconf/contriboot/commit/25eb5abaf5082a92d479b3e6f7b92aeaf392a71d&quot;&gt;major framework version upgrades&lt;/a&gt; - these tasks were completely finished in around 1hr instead of 3-4hrs or more. We are doing them after our „real“ daily job and they did not result in any downtimes as the tests are catching any bugs early in the process!&lt;/p&gt;

&lt;p&gt;When we started, we created our Ansible playbooks for a &lt;a href=&quot;https://github.com/jsunconf/contriboot/blob/master/provisioning/dev-setup.yml&quot;&gt;Vagrant Box&lt;/a&gt;, the initial idea was to test changes there before they go into production.&lt;/p&gt;

&lt;p&gt;It turned out that provisioning and managing our servers was so easy and fast that it got common practice for us to just remove one app-server from the loadbalancer configuration, deploy our changes to the isolated server and then test everything on that server in production after our local tests were successful and the CI was green.&lt;/p&gt;

&lt;p&gt;When everything was tested successful, we added the test-server to the configuration again and finally deployed the change to all machines.&lt;/p&gt;

&lt;p&gt;We have are several different playbooks in our repository, to setup a fresh application server we are basically using &lt;a href=&quot;https://github.com/jsunconf/contriboot/blob/master/provisioning/app-server.yml&quot;&gt;app-server.yml&lt;/a&gt; - we get a fresh app-server with everything configured to our needs in around 3-4 minutes. If we mess it up, we throw it away. As already mentioned, we get a fresh new one where everything is configured for production usage after a few minutes.&lt;/p&gt;

&lt;p&gt;Code deployments are done by &lt;a href=&quot;https://github.com/jsunconf/contriboot/blob/master/provisioning/deploy-app-server.yml&quot;&gt;deploy-app-server.yml&lt;/a&gt; - we are fetching the code from GitHub and reload the server. We are currently using this playbook the most  time I think.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/jsunconf/contriboot/blob/master/provisioning/loadbalancer.yml&quot;&gt;loadbalancer&lt;/a&gt; is the last major part of our Ansible playbook collection. Depending on the apps in our inventory &lt;a href=&quot;https://github.com/jsunconf/contriboot/blob/master/provisioning/templates/haproxy.cfg.j2#L35&quot;&gt;we are adding app-servers to the configuration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By just changing our Ansible inventory it is quite easy for us to remove and add servers to the loadbalancer and/or to deploy just to a single server.&lt;/p&gt;

&lt;p&gt;As getting a new box is so fast and easy, we sometimes just throw them away and provision a fresh new one.&lt;/p&gt;

&lt;h4&gt;Helps us regarding:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;high availability and possibility to fail-over&lt;/li&gt;
&lt;li&gt;high level of automation&lt;/li&gt;
&lt;li&gt;easy setup for our friends from other Unconference teams&lt;/li&gt;
&lt;li&gt;easy deployments&lt;/li&gt;
&lt;li&gt;easy testing of deployments&lt;/li&gt;
&lt;li&gt;easy backups&lt;/li&gt;
&lt;li&gt;no vendor-lock-in where it takes hours and hours to switch the platform&lt;/li&gt;
&lt;li&gt;cheap operation, we don’t want to pay &amp;gt; $100/month for hosting &amp;amp; services&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;So far we are quite happy using Ansible, Node.js/Hapi and CouchDB. Our application is running at &lt;a href=&quot;http://contriboot.jsunconf.eu&quot;&gt;contriboot.jsunconf.eu&lt;/a&gt;. We will add some new features in the future and refactor some of the older parts.&lt;/p&gt;

&lt;p&gt;I would be really happy to chat with you about orchestration and Node.js in production, I am on twitter as &lt;a href=&quot;https://twitter.com/robinson_k&quot;&gt;@robinson_k&lt;/a&gt; - or let’s chat in person at &lt;a href=&quot;http://jsunconf.eu&quot;&gt;JS Unconf&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/9c912079e3cc474d80edc8caa584ec4d&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/choosing-the-right-stack-why-we-chose-hapi-couchdb-and-ansible</link>
                <guid>http://kowalski.gd/blog/choosing-the-right-stack-why-we-chose-hapi-couchdb-and-ansible</guid>
                <pubDate>2015-02-02T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Let’s learn Erlang and fix a bug on a CouchDB Cluster #1</title>
                <description>&lt;p&gt;Let’s learn Erlang is a series where I will try to teach some Erlang by explaining patches that we will write together. I am trying to explain everything but feel free to check out &lt;a href=&quot;http://learnyousomeerlang.com/content&quot;&gt;http://learnyousomeerlang.com/content&lt;/a&gt; which is an excellent book to start learning Erlang.&lt;/p&gt;

&lt;p&gt;CouchDB 2.0 is a database that got clustering based on Amazon’s Dynamo Paper which allows horizontal scaling of CouchDB by adding nodes to the cluster. At the time of writing, it is not officially released yet, but we can already use it and fix bugs on it to learn Erlang.&lt;/p&gt;

&lt;p&gt;Today we will write a patch for CouchDB in Erlang.&lt;/p&gt;

&lt;p&gt;I often added GitHub links but I suggest you’ll open a text editor and follow the steps.&lt;/p&gt;

&lt;h2&gt;Getting started&lt;/h2&gt;

&lt;p&gt;Clone CouchDB - to fix this bug with me you will need a CouchDB version where the bug is not fixed yet:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;git clone https://github.com/robertkowalski/couchdb.git
cd couchdb &amp;amp;&amp;amp; git fetch origin
git checkout article-auth-session-COUCHDB-1356
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To compile CouchDB on OSX (if you don’t use OSX, please read &lt;a href=&quot;https://github.com/robertkowalski/couchdb/blob/article-auth-session-COUCHDB-1356/INSTALL.Unix&quot;&gt;https://github.com/robertkowalski/couchdb/blob/article-auth-session-COUCHDB-1356/INSTALL.Unix&lt;/a&gt;) you will need to have the OSX commandline-tools installed. You can install them via terminal:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will also need to install these dependencies (brew on OSX is used here):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;brew install autoconf
brew install autoconf-archive
brew install automake
brew install libtool
brew install erlang
brew install icu4c
brew install spidermonkey
brew install curl
brew install pkg-config
brew install rebar
brew install haproxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After we installed everything we will need to check out the CouchDB source and run:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;./configure
make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CouchDB is split into smaller sub-repositories. The &lt;code&gt;./configure&lt;/code&gt; kicks off rebar which will pull each sub-repo down into the folder &lt;code&gt;src&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Calling &lt;code&gt;./dev/run&lt;/code&gt; from the CouchDB directory now allows us to spin up a three node development cluster. In another terminal, run: &lt;code&gt;haproxy -f rel/haproxy.cfg&lt;/code&gt;. We now have a haproxy running in front of our three nodes on port 5984.&lt;/p&gt;

&lt;h2&gt;Hunting the bug&lt;/h2&gt;

&lt;h3&gt;Verifying it exists&lt;/h3&gt;

&lt;p&gt;Todays bug is COUCHDB-1356 (&lt;a href=&quot;https://issues.apache.org/jira/browse/COUCHDB-1356&quot;&gt;https://issues.apache.org/jira/browse/COUCHDB-1356&lt;/a&gt;). It says:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;When logging in with admin credentials (and no corresponding _users doc, if
that is important), the response of the POST to _session has the name
property set to null:

{&amp;quot;ok&amp;quot;:true,&amp;quot;name&amp;quot;:null,&amp;quot;roles&amp;quot;:[&amp;quot;_admin&amp;quot;]}

It should be the name of the admin instead, like it does when logging in with
a standard user: {&amp;quot;ok&amp;quot;:true,&amp;quot;name&amp;quot;:&amp;quot;standarduser&amp;quot;,&amp;quot;roles&amp;quot;:[]}

Requesting the _session object after logging in with an admin, the name is
proper set:

{&amp;quot;ok&amp;quot;:true,&amp;quot;userCtx&amp;quot;:
{&amp;quot;name&amp;quot;:&amp;quot;adminuser&amp;quot;,&amp;quot;roles&amp;quot;:[&amp;quot;_admin&amp;quot;]},&amp;quot;info&amp;quot;:{&amp;quot;authentication_db&amp;quot;:&amp;quot;_users&amp;quot;,
&amp;quot;authentication_handlers&amp;quot;:[&amp;quot;oauth&amp;quot;,&amp;quot;cookie&amp;quot;,&amp;quot;default&amp;quot;],
&amp;quot;authenticated&amp;quot;:&amp;quot;cookie&amp;quot;}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let’s verify that bug after pulling down our repository and installing the dependencies. According to &lt;a href=&quot;http://docs.couchdb.org/en/latest/api/server/authn.html#post--_session&quot;&gt;http://docs.couchdb.org/en/latest/api/server/authn.html#post--_session&lt;/a&gt; we can post JSON or x-www-form-urlencoded data, so let’s try to reproduce the bug:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#spin up a dev-cluster with username foo and password bar
./dev/run --admin=foo:bar
#post to a node
curl -X POST http://localhost:15984/_session -d &amp;#39;name=foo&amp;amp;password=bar&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;returns:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{&amp;quot;ok&amp;quot;:true,&amp;quot;name&amp;quot;:null,&amp;quot;roles&amp;quot;:[&amp;quot;_admin&amp;quot;]}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, that was easy. Seems like we were able to reproduce the bug.&lt;/p&gt;

&lt;h3&gt;Searching the broken code&lt;/h3&gt;

&lt;p&gt;Let’s see how far we can go by searching for &lt;code&gt;_session&lt;/code&gt; which is the endpoint from the bug-report where the error is happening:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/erlang-1/search-route.png&quot;&gt;
    &lt;img width=&quot;500&quot; src=&quot;/assets/images/erlang-1/search-route.png&quot; alt=&quot;Search results for _session&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the first results is this snippet of code in &lt;code&gt;chttpd.erl&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;url_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;_sleep&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;chttpd_misc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle_sleep_req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;url_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;_session&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;chttpd_auth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle_session_req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;url_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;_oauth&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;couch_httpd_oauth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle_oauth_req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/apache/couchdb-chttpd/blob/b44515f1c137994f5278f42106ecf720e2c35011/src/chttpd.erl#L360-375&quot;&gt;https://github.com/apache/couchdb-chttpd/blob/b44515f1c137994f5278f42106ecf720e2c35011/src/chttpd.erl#L360-375&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What does that snippet of code mean? One of the core features of Erlang is called pattern-matching. These functions are called function clauses, which take different arguments. Together they form a function declaration. The code for the &lt;code&gt;url_handler(&amp;quot;_session&amp;quot;)&lt;/code&gt; shows the path for the code in case of &lt;code&gt;url_handler&lt;/code&gt; being called with the argument &lt;code&gt;&amp;quot;_session&amp;quot;&lt;/code&gt;. The other functions are invoked by other arguments, like &lt;code&gt;&amp;quot;oauth&amp;quot;&lt;/code&gt;. If we call the function &lt;code&gt;url_handler&lt;/code&gt; with the argument &lt;code&gt;session&lt;/code&gt; - which is a String - a new function is returned.  The last clause shows a catch-all using &lt;code&gt;_&lt;/code&gt; as argument:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;url_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(_)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fun&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;chttpd_db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle_request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Anything called with one parameter which does not match the other patterns will end in &lt;code&gt;chttpd_db:handle_request/1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Erlang functions return implicit and the value from the last statement is always returned (in this case another function: the function &lt;code&gt;chttpd_auth:handle_session_req&lt;/code&gt; which takes 1 argument).&lt;/p&gt;

&lt;p&gt;It seems that http-requests going to the cluster-nodes are handled by a component called &lt;code&gt;chttpd&lt;/code&gt;. Ok, so it seems CouchDB has elements that are quite similar to a traditional web server as it accepts requests over HTTP.&lt;/p&gt;

&lt;p&gt;Let’s have a look at &lt;code&gt;chttpd&lt;/code&gt; in general, when we open &lt;code&gt;src/chttpd&lt;/code&gt;, we’ll see this directory structure:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;├── ebin
├── priv
└── src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ebin&lt;/code&gt; contains our compiled source which is compiled to bytecode which runs on the Erlang VM&lt;/li&gt;
&lt;li&gt;&lt;code&gt;priv&lt;/code&gt; contains other dependencies that chttpd has ????&lt;/li&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt; contains the source code that we are interested in&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When we open the src folder we see that there is a file called &lt;code&gt;chttpd_auth.erl&lt;/code&gt;. That one looks promising!&lt;/p&gt;

&lt;p&gt;When we open the file we’ll see that the file is an Erlang module:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/apache/couchdb-chttpd/blob/b44515f1c137994f5278f42106ecf720e2c35011/src/chttpd_auth.erl#L13&quot;&gt;https://github.com/apache/couchdb-chttpd/blob/b44515f1c137994f5278f42106ecf720e2c35011/src/chttpd_auth.erl#L13&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A module can export several functions, in that case &lt;code&gt;default_authentication_handler&lt;/code&gt; &lt;code&gt;cookie_authentication_handler&lt;/code&gt; and &lt;code&gt;handle_session_req&lt;/code&gt; are exported.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some background info on exports&lt;/strong&gt;:
an exported function is usable outside of a module. The &lt;code&gt;/1&lt;/code&gt; in the export means that the function with this name is taking one argument. Erlang functions can have the same name, but take different arguments — and you can export them depending on how many arguments they take - Example:&lt;/p&gt;

&lt;p&gt;if we wanted to additionally export a fictional function that has the same name and takes two arguments we would probably write:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;handle_session_req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(_&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and would additionally export:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;export&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handle_session_req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But back to our code: if we look at &lt;code&gt;handle_session_req&lt;/code&gt; we’ll see that it is delegating to another module and function: it seems there is a module called &lt;code&gt;couch_httpd_auth&lt;/code&gt; which has a function &lt;code&gt;handle_session_req&lt;/code&gt; with an arity of two (which is indicated by a &lt;code&gt;handle_session_req/2&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/couchdb-chttpd/blob/b44515f1c137994f5278f42106ecf720e2c35011/src/chttpd_auth.erl#L25-26&quot;&gt;https://github.com/apache/couchdb-chttpd/blob/b44515f1c137994f5278f42106ecf720e2c35011/src/chttpd_auth.erl#L25-26&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The function in question seems to be in the folder &lt;code&gt;couch&lt;/code&gt; - as you might have noticed the CouchDB modules have their component as a prefix of their filename (&lt;code&gt;chttpd_auth.erl&lt;/code&gt; will lead you to the folder &lt;code&gt;chttpd&lt;/code&gt; and &lt;code&gt;couch_httpd_auth.erl&lt;/code&gt; leads you to the folder &lt;code&gt;couch&lt;/code&gt;). So let’s open that file in &lt;code&gt;src/couch/src&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are multiple definitions of &lt;code&gt;handle_session_req&lt;/code&gt; but as we do a POST-request to the endpoint there is just one which fits for us:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;handle_session_req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;#httpd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mochi_req&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;MochiReq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;AuthModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/apache/couchdb-couch/blob/master/src/couch_httpd_auth.erl#L270&quot;&gt;https://github.com/apache/couchdb-couch/blob/master/src/couch&lt;em&gt;httpd&lt;/em&gt;auth.erl#L270&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you remember the CouchDB docs (&lt;a href=&quot;http://docs.couchdb.org/en/latest/api/server/authn.html#post--_session&quot;&gt;http://docs.couchdb.org/en/latest/api/server/authn.html#post--_session&lt;/a&gt;) we can POST with different Content-Types. In the beginning of the handler we see the handling for it, it seems we are on a good path.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/couchdb-couch/blob/master/src/couch_httpd_auth.erl#L272-283&quot;&gt;https://github.com/apache/couchdb-couch/blob/master/src/couch&lt;em&gt;httpd&lt;/em&gt;auth.erl#L272-283&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;send_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Req&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;#httpd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req_body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ReqBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;couch_util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UserProps2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;couch_util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;roles&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UserProps2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It seems that this code is sends the buggy response to the user - time for me to introduce &lt;code&gt;io:format&lt;/code&gt;: with &lt;code&gt;io:format&lt;/code&gt; we can log things to the console, example:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;io:format(&amp;quot;demoprint: ~s&amp;quot;, [&amp;quot;foo&amp;quot;]).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;results in &lt;code&gt;demoprint: foo&lt;/code&gt; on the stdout.&lt;/p&gt;

&lt;p&gt;The bug report says the name value is not set, strange.&lt;/p&gt;

&lt;p&gt;A short look at &lt;code&gt;couch_util:get_value&lt;/code&gt; says us that it returns the value of a key/value structure and if it does not find it, it returns a default value (&lt;a href=&quot;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/src/couch_util.erl#L154&quot;&gt;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/src/couch_util.erl#L154&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;We will add &lt;code&gt;io:format&lt;/code&gt; with a comma at , as other statements are following that we want to execute (&lt;code&gt;send_json&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;~s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;UserProps2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;send_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Req&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;#httpd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req_body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ReqBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;couch_util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UserProps2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;couch_util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;roles&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UserProps2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ok, we&amp;#39;ll stop the cluster (crtl+c) and run make again from our project root directory.&lt;/p&gt;

&lt;p&gt;After the compile we redo the steps to boot the cluster from the first part of the article:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;#spin up a dev-cluster with username foo and password bar
./dev/run --admin=foo:bar
#post to a node
curl -X POST http://localhost:15984/_session -d &amp;#39;name=foo&amp;amp;password=bar&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CouchDB returns:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{&amp;quot;error&amp;quot;:&amp;quot;badarg&amp;quot;,&amp;quot;reason&amp;quot;:null,&amp;quot;ref&amp;quot;:2510570082}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;#39;s have a look at the Erlang docs at &lt;a href=&quot;http://erlang.org/doc/man/io.html#format-2&quot;&gt;http://erlang.org/doc/man/io.html#format-2&lt;/a&gt; - let&amp;#39;s try if &lt;code&gt;~p&lt;/code&gt; is the right fit for our needs as it is used print Erlang terms.&lt;/p&gt;

&lt;p&gt;We change our code to:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nn&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;~p&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;UserProps2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;send_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Req&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;#httpd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req_body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ReqBody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;couch_util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UserProps2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;couch_util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;roles&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UserProps2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and after the stop of the cluster, compile and start of the cluster we get a nice message from CouchDB:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{&amp;quot;ok&amp;quot;:true,&amp;quot;name&amp;quot;:null,&amp;quot;roles&amp;quot;:[&amp;quot;_admin&amp;quot;]}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But where is our debug logging output?&lt;/p&gt;

&lt;p&gt;The dev-cluster nodes are logging each on their own. In a production setup they would be on different machines. In our development setup they log to &lt;code&gt;./dev/logs/&lt;/code&gt;. &lt;code&gt;15984&lt;/code&gt; is node1 so we enter in the terminal:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cat ./dev/logs/node1.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and we will see something like this in the log:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2014-11-27 00:43:41.374 [debug] node1@127.0.0.1 &amp;lt;0.259.0&amp;gt; adding shards/80000
  000-9fffffff/_users.1416085356 -&amp;gt; &amp;#39;node2@127.0.0.1&amp;#39; to mem3_sync queue
2014-11-27 00:43:41.406 [debug] node1@127.0.0.1 &amp;lt;0.478.0&amp;gt; Attempt Login: foo
2014-11-27 00:43:41.406 [warning] node1@127.0.0.1 &amp;lt;0.478.0&amp;gt; no record of user
  foo
2014-11-27 00:43:41.406 [debug] node1@127.0.0.1 &amp;lt;0.478.0&amp;gt; cache miss for foo
[{&amp;lt;&amp;lt;&amp;quot;roles&amp;quot;&amp;gt;&amp;gt;,[&amp;lt;&amp;lt;&amp;quot;_admin&amp;quot;&amp;gt;&amp;gt;]},
 {&amp;lt;&amp;lt;&amp;quot;salt&amp;quot;&amp;gt;&amp;gt;,&amp;lt;&amp;lt;&amp;quot;194439690d43ce9c2720acb4db907723&amp;quot;&amp;gt;&amp;gt;},
 {&amp;lt;&amp;lt;&amp;quot;iterations&amp;quot;&amp;gt;&amp;gt;,10},
 {&amp;lt;&amp;lt;&amp;quot;password_scheme&amp;quot;&amp;gt;&amp;gt;,&amp;lt;&amp;lt;&amp;quot;pbkdf2&amp;quot;&amp;gt;&amp;gt;},
 {&amp;lt;&amp;lt;&amp;quot;derived_key&amp;quot;&amp;gt;&amp;gt;,&amp;lt;&amp;lt;&amp;quot;e6de659df04ca1db5050bb6747fb039a30836a01&amp;quot;&amp;gt;&amp;gt;}]
   2014-11-27 00:43:41.407 [notice] node1@127.0.0.1 &amp;lt;0.478.0&amp;gt; 776ee413
   127.0.0.1 localhost:15984 POST /_session 200 ok 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I think we are now able to confirm that our structure, which is a list does not contain the key we are searching for.&lt;/p&gt;

&lt;h3&gt;Write a failing test&lt;/h3&gt;

&lt;p&gt;CouchDB uses EUnit which is included in Erlang. A good start for a test is to copy another test to have the boilerplate already added. &lt;code&gt;src/couch/test/couchdb_csp_tests.erl&lt;/code&gt; look like a nice template as they already make HTTP-requests.&lt;/p&gt;

&lt;p&gt;We run:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cp src/couch/test/couchdb_csp_tests.erl src/couch/test/couchdb_auth_tests.erl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If we take a look at our copied testfiles each test in the file has an assertion.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/test/couchdb_csp_tests.erl#L68-74&quot;&gt;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/test/couchdb&lt;em&gt;csp&lt;/em&gt;tests.erl#L68-74&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;EUnit uses so called Macros which are called with a &lt;code&gt;?&lt;/code&gt; in front of the name, like &lt;code&gt;?_assertEqual&lt;/code&gt;. Everyone can define macros, and it is quite easy:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MACRONAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Would return &lt;code&gt;&amp;quot;Value&amp;quot;&lt;/code&gt; on &lt;code&gt;?MACRONAME().&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can also delete the TIMEOUT-Macro at the top of our file, we will not need it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/test/couchdb_csp_tests.erl#L17&quot;&gt;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/test/couchdb&lt;em&gt;csp&lt;/em&gt;tests.erl#L17&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; functions are running before and after the tests. The copied version of our test says:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;csp&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;enable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;Addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;httpd&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;bind_address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;Port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;integer_to_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;mochiweb_socket_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;couch_httpd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;lists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/_utils/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/test/couchdb_csp_tests.erl#L20-24&quot;&gt;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/test/couchdb&lt;em&gt;csp&lt;/em&gt;tests.erl#L20-24&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;which we can modify to:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;Addr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;httpd&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;bind_address&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;Port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;integer_to_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;mochiweb_socket_server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;couch_httpd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
    &lt;span class=&quot;nn&quot;&gt;lists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/_session&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As Erlang implicitly returns, we are returning the address to our session endpoint. This will get passed to our test (the section beginning with the &lt;code&gt;should&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;In the middle of our file we will find a loop which iterates over our tests.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/test/couchdb_csp_tests.erl#L30-L47&quot;&gt;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/test/couchdb&lt;em&gt;csp&lt;/em&gt;tests.erl#L30-L47&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can rename the Headline from &lt;code&gt;&amp;quot;Content Security Policy tests&amp;quot;&lt;/code&gt; to &lt;code&gt;&amp;quot;Auth tests&amp;quot;&lt;/code&gt; and delete the last three tests. &lt;code&gt;should_not_return_any_csp_headers_when_disabled&lt;/code&gt; can get renamed to &lt;code&gt;should_not_return_username_on_post_to_session&lt;/code&gt;. We also have to rename the test declaration and delete the other three declarations - if we would not delete them, we would get a compiler warning, that the functions are not used.&lt;/p&gt;

&lt;p&gt;Our renamed test that was not deleted should look like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;should_not_return_username_on_post_to_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assertEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;csp&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;enable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;_,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;_}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;test_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nn&quot;&gt;proplists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-Security-Policy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;it tests for the atom &lt;code&gt;undefined&lt;/code&gt;. The test says it should be returned at the end of the block marked by &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;. Before that it  changes the config value for the csp section and makes a GET-request. The author is just interested in the headers here, so other values are not assigned to a variable (&lt;code&gt;_&lt;/code&gt;). By the way: in Erlang every variable has to start with an uppercase letter.&lt;/p&gt;

&lt;p&gt;Changing this snippet to our needs is quite easy: admins are also defined in the config (see also: &lt;a href=&quot;http://docs.couchdb.org/en/1.6.1/config/auth.html&quot;&gt;http://docs.couchdb.org/en/1.6.1/config/auth.html&lt;/a&gt;). So our call to setup the user &lt;code&gt;rocko&lt;/code&gt; with password &lt;code&gt;artischocko&lt;/code&gt; would be:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;admins&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;rocko&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;artischocko&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Looking at the next line&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;_,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;_}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;test_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;it turns out that we need a POST-request and the body, not the headers.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;get&lt;/code&gt;-functions in &lt;code&gt;test_request.erl&lt;/code&gt; just wrap a request function for convenience: &lt;a href=&quot;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/test/test_request.erl#L23-26&quot;&gt;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/test/test_request.erl#L23-26&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As functions for a POST is missing, we have to add it:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and we also have to export the functions to use it from outside:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;export&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can fire a POST request in our test:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;_,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;_,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;test_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;quot;{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;rocko&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;artischocko&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;}&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We have to decode the JSON that is coming back, let&amp;#39;s use jiffy (jiffy is a JSON parser included in CouchDB) for that:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;jiffy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then get the value for the name field:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;proplists:get_value(&amp;lt;&amp;lt;&amp;quot;name&amp;quot;&amp;gt;&amp;gt;, Json)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The funky &lt;code&gt;&amp;lt;&amp;lt;&amp;quot;name&amp;quot;&amp;gt;&amp;gt;&lt;/code&gt; notation means that we are using an Erlang binary. &lt;code&gt;proplists:get_value(&amp;lt;&amp;lt;&amp;quot;name&amp;quot;&amp;gt;&amp;gt;, Json)&lt;/code&gt; will return a binary so we change the undefined, which was an Erlang atom to the binary &lt;code&gt;&amp;lt;&amp;lt;&amp;quot;rocko&amp;quot;&amp;gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Our whole test, which tests for the binary &lt;code&gt;&amp;lt;&amp;lt;&amp;quot;rocko&amp;quot;&amp;gt;&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;nf&quot;&gt;should_not_return_username_on_post_to_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assertEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;rocko&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;admins&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;rocko&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;artischocko&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;_,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;_,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;test_request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;&amp;quot;{&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;rocko&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;artischocko&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;}&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;jiffy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;nn&quot;&gt;proplists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;running the tests for &lt;code&gt;src/couch&lt;/code&gt; is easy, just run:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;rebar -r eunit apps=couch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We should have one failing test now. Back to the session handler!&lt;/p&gt;

&lt;h3&gt;Fixing the bug&lt;/h3&gt;

&lt;p&gt;When we take a second look at the &lt;code&gt;handle_session_req&lt;/code&gt; which handles the POST-request we can see that we have access to a variable called &lt;code&gt;UserName&lt;/code&gt; in our scope which is the username the user gave us!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/src/couch_httpd_auth.erl#L284&quot;&gt;https://github.com/apache/couchdb-couch/blob/cb52507c1ced478e6900cae529584461c3d4910b/src/couch&lt;em&gt;httpd&lt;/em&gt;auth.erl#L284&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This means that we can change&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;couch_util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UserProps2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erlang&quot; data-lang=&quot;erlang&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UserName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When we now run our test suite again we should have a green tests and fixed our bug!&lt;/p&gt;

&lt;h2&gt;Recap&lt;/h2&gt;

&lt;p&gt;We fixed a small bug on a clustered CouchDB and learned about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pattern matching&lt;/li&gt;
&lt;li&gt;Modules and exporting functions&lt;/li&gt;
&lt;li&gt;implicit returns&lt;/li&gt;
&lt;li&gt;Macros&lt;/li&gt;
&lt;li&gt;logging debug messages&lt;/li&gt;
&lt;li&gt;EUnit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The article is based on a real-life pull-request: &lt;a href=&quot;https://github.com/apache/couchdb-couch/pull/16/&quot;&gt;https://github.com/apache/couchdb-couch/pull/16/&lt;/a&gt; - and the CouchDB Community is happy about all contributions! See &lt;a href=&quot;http://couchdb.apache.org/#contribute&quot;&gt;http://couchdb.apache.org/#contribute&lt;/a&gt; for further info.&lt;/p&gt;

&lt;p&gt;Apache CouchDB is an Open Source Project under Apache 2.0 License. The code used in this article is from Apache CouchDB, licensed under Apache License, Version 2.0, January 2004. For details, see: &lt;a href=&quot;https://github.com/apache/couchdb/blob/master/LICENSE&quot;&gt;https://github.com/apache/couchdb/blob/master/LICENSE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/2dbf8d67bd4843ce9c6a9f3727f25c9a&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/lets-learn-erlang-and-fix-a-bug-on-a-couchdb-cluster</link>
                <guid>http://kowalski.gd/blog/lets-learn-erlang-and-fix-a-bug-on-a-couchdb-cluster</guid>
                <pubDate>2014-12-03T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>Analysis of the package.json data in the npm registry</title>
                <description>&lt;p&gt;Today I had a look on the metadata in the npm registry which currently contains 48248 modules.&lt;/p&gt;

&lt;p&gt;I was interested in the most used licenses and if there are many modules which do not reference a repository in their package.json&lt;/p&gt;

&lt;p&gt;The most used licenses in the npm registry are the less permissive ones:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/analysis-npm-licenses.png&quot; alt=&quot;Chart&quot;&gt;&lt;/p&gt;

&lt;p&gt;Around 2% of the packages seem to be dual licensed.&lt;/p&gt;

&lt;p&gt;Most modules reference a repository in their &lt;code&gt;package.json&lt;/code&gt;, I expected much more from the things that I hear from twitter:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/analysis-npm-repository-field.png&quot; alt=&quot;Chart&quot;&gt;&lt;/p&gt;

&lt;p&gt;7496 do not provide a reference to a repository vs. 40752 modules that provide one.&lt;/p&gt;

&lt;p&gt;If you are interested in the raw data of the repository values, here is the
&lt;a href=&quot;https://gist.github.com/robertkowalski/7620849&quot;&gt;gist&lt;/a&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/analysis-of-the-packagejson-data-in-the-npm-registry</link>
                <guid>http://kowalski.gd/blog/analysis-of-the-packagejson-data-in-the-npm-registry</guid>
                <pubDate>2013-11-23T00:00:00+00:00</pubDate>
        </item>

        <item>
                <title>so coded conference</title>
                <description>&lt;p&gt;Almost two weeks ago I visited the so coded conference. It was the first so coded, so I was pretty excited what would happen. Some days before the conference an envelope arrived, containing confetti, a glueable fake-mustache(!) and my ticket. Wow!&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;The conference was on Thursday and Friday and was located in Bergedorf, which is more on the outskirts of Hamburg than in the inner city (20 minutes per city train). But happy me, my ticket of the so coded conference also counted as a ticket for the whole short-range public transportation of hamburg, really a great idea!&lt;/p&gt;

&lt;p&gt;The morning I arrived in Bergedorf pink ballons on the lanterns showed me the way to the Lola from the station. When entered the &amp;quot;Lola&amp;quot; in Bergedorf, the venue of the so coded, a helper in a pink so coded tshirt waited in the entrance. He asked for my name and then took me into the room where the talks would happen, to &amp;quot;my&amp;quot; place. On my place there was a pink paper bag saying &amp;quot;Hay Robert&amp;quot;. The bag contained a so coded pillow and some nice goodies from the sponsors. Awesome, so much love for the details. Pretty stunned I got some breakfast.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;View on the breakfast&quot; src=&quot;/assets/images/socoded/so-coded-breakfast.jpg&quot; height=&quot;500&quot;/&gt;
&lt;br/&gt;
Picture by &lt;a href=&quot;https://twitter.com/socodedconf&quot;&gt;@socoded&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you see, we had round tables. Later one of the organizers told me that they tried to mix up the people depending on the company they were from. This was possible as we had this personal seats with the bag for us and it definitly helped to break the first ice and to meet new great people.&lt;/p&gt;

&lt;p&gt;There was just one track and there was no schedule. I really enjoyed the first talk which was from Jessica Allen. I am not sure if there is a video, but if there is one, you should have a look!&lt;/p&gt;

&lt;p&gt;After every talk there were 30 minutes break. Great! I know some conferences which have really larger venues where you miss the beginning of the next talks several times in the two days, as there are just some minutes between the talks. Even worse as some speakers tend to speak longer than planned. This way there is also time to speak with the speaker after the talk or to discuss with other attendees about the topic.&lt;/p&gt;

&lt;p&gt;During the break I noticed a small printer on a table in the foyer, like the ones at the checkout of each supermarket. In front of it a big button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/socoded/so-coded-socoded-printer.jpg&quot; alt=&quot;The printer&quot;&gt;
&lt;br/&gt;
Picture by &lt;a href=&quot;http://www.flickr.com/photos/101332318@N05&quot;&gt;So Coded&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Turns out, if you press the button, the next talk of the schedule will be printed. Later the organizers even published an url where you could add own custom messages via HTTP requests.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Picture of the printer&quot; src=&quot;/assets/images/socoded/so-coded-robin-drexler-printer.jpeg&quot;  height=&quot;500&quot;/&gt;
&lt;br/&gt;
Picture by &lt;a href=&quot;http://www.eyeem.com/p/20415893&quot;&gt;Robin Drexler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I enjoyed some more talks and had some nice conversations, even got my hands on the leap device, which Robin Böhm used to control the slides for his talk later. During another break I noticed a large banner in the foyer. It was a mosaic, where the twitter avatars of all attendees (including me) formed the logo of so coded - a star on pink background. Again, so much love for the details!&lt;/p&gt;

&lt;p&gt;They also had a room where I found a carerra car track. You could connect your computer to an Arduino connected with two servos to the two cars of the track. Nerd dreams came true!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/socoded/so-coded-so-coded-carrera.jpg&quot; alt=&quot;Picture of the track&quot;&gt;
&lt;br/&gt;
Picture by &lt;a href=&quot;http://www.flickr.com/photos/101332318@N05&quot;&gt;So Coded&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the evening there was a party at the venue, as the &amp;quot;Lola&amp;quot; also has a small bar. There was a live set from Andy Delcambre and Jason Costello from GitHub which was really rad. The same day there was a bug in the test suite of npm regarding &lt;a href=&quot;https://github.com/isaacs/npm/issues/3897&quot;&gt;gist urls&lt;/a&gt; but luckily Andy Delcambre who was behind the turntables with Jason Costello was able to help me, so I fixed the bug the same night.&lt;/p&gt;

&lt;p&gt;The organizers had another app next to the printer-app. It showed an emergency number and the next public transport departures. I can&amp;#39;t remember any other conference I visited which had such a nice service for people that had to get to their home or hotel.&lt;/p&gt;

&lt;p&gt;I think I didn&amp;#39;t mention it already: there was no QA allowed in or after the talks! And it really payed off in my opinion, as most questions are just not interesting for the whole audience and just for the single person who is asking the question - having 30mins between each talk allowed to ask and discuss with the speaker in a more natural and nicer way, I think.&lt;/p&gt;

&lt;h2&gt;Conclusion:&lt;/h2&gt;

&lt;p&gt;So coded raised the bar for other tech conferences. I was told afterwards that the organizers collected things they wanted to fix on conferences they visited over the years and months, and all these ideas went into the planning of so coded and the results made the event so lovely for me. I can&amp;#39;t imagine how many countless hours the organizers must have invested into the event which really impressed me as an event organizer and also made me happy as an attendee.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/ab0ef3fe9cc04953b33e6c603772c974&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/so-coded-conference</link>
                <guid>http://kowalski.gd/blog/so-coded-conference</guid>
                <pubDate>2013-10-08T21:00:00+01:00</pubDate>
        </item>

        <item>
                <title>Say hello to multiple Redis session stores in Connect/Express</title>
                <description>&lt;p&gt;I am happily hosting an open source side project at Nodejitsu, a &lt;a href=&quot;http://javascriptjob.de/&quot;&gt;JavaScript Job Board&lt;/a&gt; mainly for the german market. The project itself uses Redis (provided by Iris Couch Redis) and MongoDB. One morning I discovered that my app was not available, throwing a 500 error.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;What happenened?&lt;/p&gt;

&lt;p&gt;I am using a free instance of the Iris Couch Redis accounts one can use with a Nodejitsu account for my session handling. This day the connection between Nodejitsu and Iris Couch was out of order and the result was my Express app crashing.&lt;/p&gt;

&lt;p&gt;So, with my volunteer side project, which is Open Source I can not afford a High Availablity Infrastructure. I have to use the free instances from Iris Couch for example. I would bet there are alot of other very small projects around like my Job Board, which also depend on free or very cheap infrastructure.&lt;/p&gt;

&lt;p&gt;To prevent my app crashing I created a free account at RedisToGo - but I still had no way to switch between my hosts. So I started to develop &lt;a href=&quot;https://github.com/robertkowalski/connect-multi-redis&quot;&gt;connect-multi-redis&lt;/a&gt;, a middleware for Connect and Express which checks the connection state to the Redis hosts and switches to the next one, once the current host is down.&lt;/p&gt;

&lt;p&gt;Surely the old sessions will be lost, but everyone is able to work further with the app, and the app is not having a downtime.&lt;/p&gt;

&lt;p&gt;If all Redis hosts are down connect-multi-redis will choose the builtin MemoryStore for sessions as a last resort.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s very easy to use, but you have to inject the current app instance to get it work with connect (Express has the instance of the app glued on every &lt;code&gt;res&lt;/code&gt; object and I need to access the app.stack Array).&lt;/p&gt;

&lt;p&gt;I would love to get some feedback (Comments here, email, twitter), especially if you know a solution for Connect without injecting the Connect instance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/97fccb006b414c60b6ed86f2f4cb266d&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/say-hello-to-multiple-redis-session-stores-in-connect-express</link>
                <guid>http://kowalski.gd/blog/say-hello-to-multiple-redis-session-stores-in-connect-express</guid>
                <pubDate>2013-04-06T14:47:00+01:00</pubDate>
        </item>

        <item>
                <title>In english please?</title>
                <description>&lt;p&gt;As more than the half of my visitors are english speaking persons, I will start to blog in english from today. The old german articles will still be accessible, but new articles will be in the english language.&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/in-english-please</link>
                <guid>http://kowalski.gd/blog/in-english-please</guid>
                <pubDate>2013-04-05T00:37:00+01:00</pubDate>
        </item>

        <item>
                <title>Bitcoin Realtime Liveticker als iOS App mit HTML5 Websockets</title>
                <description>&lt;p&gt;Das Websocket-Protokoll ist eine relativ neue HTML5-Technologie. Im Prinzip ist es eine Vollduplexverbindung mit Hilfe eines Sockets. So müssen Clients nicht mehr regelmäßig beim Server anfragen um Updates vom Server zu bekommen, wodurch der gesamte Overhead beim Aufbau einer Verbindung entfällt.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Heute möchte ich eine relativ simple iOS Applikation mit Hilfe von Phonegap bauen um zu zeigen, wie einfach Websockets zu benutzen sind. Für den Produktionsbetrieb fehlt aber unter anderem die Behandlung von Fehlern, auch habe ich nicht getestet, wie sich der Akku des iPhone&amp;#39;s bei einer Websocketverbindung verhält.&lt;/p&gt;

&lt;p&gt;Bitcoin ist eine digitale Währung. Mt Gox bietet eine Websocket Api für ihren Kurs von Bitcoins an.&lt;/p&gt;

&lt;p&gt;Der Kern der Anwendung besteht eigentlich aus diesem JavaScript:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#result&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WebSocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ws://websocket.mtgox.com:80/mtgox?Channel=ticker&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ticker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Im ersten Schritt holen wir uns das DOM-Element, in dem wir das Ergebnis anzeigen wollen.&lt;/p&gt;

&lt;p&gt;Danach erstellen wir eine Verbindung zum Websocketserver, und wählen dabei den Channel für den Liveticker aus.&lt;/p&gt;

&lt;p&gt;Bei jedem Ergebnis, was uns der Server schickt wird der onmessage Callback aufgerufen.&lt;/p&gt;

&lt;p&gt;In &lt;code&gt;event.data&lt;/code&gt; finden wir einen Text, den wir in ein JSON Objekt umwandeln und aus dem wir uns dann den &lt;code&gt;display&lt;/code&gt;-Wert für den letzten Kurs holen und als &lt;code&gt;innerText&lt;/code&gt; in das result-Element schreiben:&lt;/p&gt;

&lt;p&gt;Ein wenig CSS dazu, fertig ist die Realtime Bitcoin iOS App.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/bitcoin-liveticker.png&quot; alt=&quot;Ein Bild der HTML5 Applikation auf dem iPhone&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Das Xcode-Projekt findet ihr unter: &lt;a href=&quot;https://github.com/robertkowalski/bitcoin-app-demo&quot; rel=&quot;nofollow&quot;&gt;https://github.com/robertkowalski/bitcoin-app-demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/3ede50dee7a7486291d15cd2fc14575b&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/bitcoin-realtime-liveticker-als-ios-app-mit-html5-websockets</link>
                <guid>http://kowalski.gd/blog/bitcoin-realtime-liveticker-als-ios-app-mit-html5-websockets</guid>
                <pubDate>2013-03-29T21:04:00+00:00</pubDate>
        </item>

        <item>
                <title>ES6 Features testen Teil 1: let und const</title>
                <description>&lt;p&gt;Die Serie &amp;quot;ES6 Features testen&amp;quot; berichtet über neue JavaScript Sprachfeatures die teilweise schon in Browsern implementiert sind.&lt;/p&gt;

&lt;p&gt;ECMAScript, von dem JavaScript streng genommen eigentlich ein Dialekt ist, wird vom &amp;quot;TC39-Komitee&amp;quot; &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-262.htm&quot;&gt;standardisiert und weiterentwickelt.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mit der kommenden Version 6 - auch als &amp;quot;Harmony&amp;quot; betitelt - wird es viele neue Sprachfeatures für den Entwickler geben. Ein paar davon kann man heute schon ausprobieren, da viele Features schon in &lt;a href=&quot;http://kangax.github.com/es5-compat-table/es6/&quot;&gt;Browsern&lt;/a&gt; und Servern (z.B. node.js) implementiert wurden.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Getestet wurde dieser Blogartikel mit Firefox 19.&lt;/p&gt;

&lt;h2&gt;let&lt;/h2&gt;

&lt;p&gt;Der Scope des reservierten Schlüsselworts &lt;code&gt;let&lt;/code&gt; in JavaScript bezieht sich auf den jeweiligen Block - der Scope von Variablendeklarationen mit &lt;code&gt;var&lt;/code&gt; dagegen auf den Scope einer Funktion.&lt;/p&gt;

&lt;p&gt;Das Schlüsselwort &lt;code&gt;let&lt;/code&gt; erlaubt uns somit zum Beispiel lokale Variablen innerhalb von Schleifen.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1, 2, 3, 4&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Zudem ist es mit &lt;code&gt;let&lt;/code&gt; möglich lokale Variablen innerhalb eines Block Scopes deklarieren.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 6&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;const&lt;/h2&gt;

&lt;p&gt;Das neue Keyword &lt;code&gt;const&lt;/code&gt; beschert uns Konstanten in JavaScript.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MY_CONSTANT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MY_CONSTANT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;MY_CONSTANT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MY_CONSTANT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wie man sieht - es tut sich was in JavaScript, mit dem noch nicht fertigen Harmony bzw. ES6 werden viele neue Features erwartet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/9ce7311b6a48420f967514cedee762fe&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/es6-features-schon-heute-testen-teil-1-let-und-const</link>
                <guid>http://kowalski.gd/blog/es6-features-schon-heute-testen-teil-1-let-und-const</guid>
                <pubDate>2013-02-28T17:49:00+00:00</pubDate>
        </item>

        <item>
                <title>Talk: Cablecar - Baue deine eigene Suchmaschine</title>
                <description>&lt;p&gt;Gestern habe ich einen Talk auf einem CCC Hamburg Developer Meetup gegeben. Das Thema: &amp;quot;Baue deine eigene Suchmaschine mit elasticsearch und Cablecar&amp;quot;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Mit dem Projekt ist es möglich verschiedenste Texte zu indexieren (PDF, Word-Dokumente und viele mehr). Diese kann man dann mit der Webanwendung durchsuchen und bekommt die entsprechenden Treffer dann aufgelistet. Dabei sorgt das node.js Frontend mit dem Namen Cablecar für die Übermittlung der Suchanfragen und der späteren Anzeige der Ergebnisse.&lt;/p&gt;

&lt;p&gt;Mit dem Projekt kann ich zum Beispiel meine E-Books für mich durchsuchbar machen, denn Fachbücher kaufe ich mittlerweile nur noch in der elektronischen Version.&lt;/p&gt;

&lt;p&gt;Die Slides sind auf &lt;a href=&quot;https://speakerdeck.com/robertkowalski/cablecar-run-your-own-search-engine-today&quot; rel=&quot;nofollow&quot;&gt;Speakerdeck&lt;/a&gt; ansehbar und das Projekt findet man auf &lt;a href=&quot;https://github.com/hamburg-honeybadgers/cablecar&quot; rel=&quot;nofollow&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/talk-cablecar-baue-deine-eigene-suchmaschine</link>
                <guid>http://kowalski.gd/blog/talk-cablecar-baue-deine-eigene-suchmaschine</guid>
                <pubDate>2013-02-01T18:29:00+00:00</pubDate>
        </item>

        <item>
                <title>Der Freibierfinder</title>
                <description>&lt;p&gt;Im August haben wir die erste Version des Freibierfinders veröffentlicht. Es war eine Spaßidee, zu der wir - halb albernd, halb ernst - relativ schnell viele gute Ideen sammeln konnten.&lt;/p&gt;

&lt;p&gt;Anstatt unsere Ideen sofort umzusetzen und viel Zeit zu investieren, griffen wir ein Prinzip aus dem &amp;quot;Lean&amp;quot;-Umfeld auf: &amp;quot;Wenn du ein Feature bauen willst, baue erst einmal eine Demo/Dummy und schaue, wieviele Leute sich interessieren&amp;quot;.&lt;/p&gt;

&lt;p&gt;Neben anderen erfolgreichen Projekten wurde auch Dropbox groß, die erst starteten, als Ihr Demovideo genügend Views hatte.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;So bauten wir relativ schnell - entgegen der vollen Implementierung aller Ideen - an 2-3 Feierabenden eine kleine Applikation mit der Intention, festzustellen ob der Freibierfinder ein Erfolg werden könnte.&lt;/p&gt;

&lt;p&gt;Man kann sich dort vorab für Neuigkeiten um den Freibierfinder registrieren. &lt;a href=&quot;/assets/images/freibierfinder.png&quot; title=&quot;Screenshot freibierfinder.de&quot;&gt;Es ist im Prinzip ein Formular, nach dessen Absenden die E-Mailadressen validiert werden und in einer MongoDB gespeichert werden.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wir haben ein paar Statistiken gesammelt, die relativ interessant sind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Von 123 Besuchern haben 10 ihre E-Mail hinterlegt. Das ist eine Conversion von über 8%. Jeder 8. der die Seite besucht, registriert sich. Auch wenn das Produkt noch nicht fertig ist.&lt;/li&gt;
&lt;li&gt;Die Hälfte der Besucher (ca. 60) hatten wir bereits am ersten Tag des Launches - wir verteilten die Links auf Facebooks und Twitter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/freibierfinder-metric.png&quot; alt=&quot;Metrik freibierfinder launch&quot; title=&quot;Metrik freibierfinder&quot;&gt;&lt;/p&gt;

&lt;p&gt;Im Endeffekt haben wir leider beide keine Zeit gefunden, der Idee weiter Schub zu geben und das ganze ernsthafter zu verfolgen. Der Server für den Freibierfinder wird bald abgestellt.&lt;/p&gt;

&lt;p&gt;Ich bin trotzdem der Meinung, man könnte den Freibierfinder mit genug Zeit und Energie sehr erfolgreich werden lassen.&lt;/p&gt;

&lt;h2&gt;Weiterführende Links:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Lean_software_development&quot;&gt;Lean software development - wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <link>http://kowalski.gd/blog/der-freibierfinder</link>
                <guid>http://kowalski.gd/blog/der-freibierfinder</guid>
                <pubDate>2012-10-18T22:27:00+01:00</pubDate>
        </item>

        <item>
                <title>FrOSCon 2012</title>
                <description>&lt;p&gt;Letztes Wochenende war ich auf der FrOSCon 2012. Die FrOSCon ist die &amp;quot;Free and Open Source Software Conference&amp;quot; und findet jedes Jahr in St. Augustin bei Bonn statt.&lt;/p&gt;

&lt;!-- more--&gt;

&lt;p&gt;Für mich war es die erste FrOSCon. Es folgt eine kurze Zusammenfassung der Vorträge, die mich besonders begeistert haben:&lt;/p&gt;

&lt;p&gt;Positiv beeindruckt hat mich Lisp bzw. Clojure als Sprachen, was eigentlich nahe liegt, da ich viel JavaScript schreibe und JavaScript trotz seiner Tücken sehr gern schreibe. Es gab einen eigenen Lisp Track dieses Jahr auf der FrOSCon.&lt;/p&gt;

&lt;p&gt;Der Beitrag &amp;quot;How big corporations play the open source game&amp;quot; gab einen interessanten Einblick wie und vor allem warum Großkonzerne (Oracle, IBM, Sun, Microsoft und Google) Open Source fördern.&lt;/p&gt;

&lt;p&gt;Judith Andresen hielt einen sehr empfehlenswerten &lt;a href=&quot;http://www.andresen.de/2012/08/26/froscon-7-projektstatus-nachrichten-vom-anderen-stern/&quot;&gt;Vortrag&lt;/a&gt;  wie Entwickler die projektinterne Kommunikation mit Projektmanagern verbessern können. Denn auch durch verschiedene Sichtweisen auf ein Projekt kommt es immer wieder zu Missverständnissen.&lt;/p&gt;

&lt;p&gt;Insgesamt waren es 2 sehr anstrengende Konferenztage, da ich jeden Tag von Morgens bis Abends Input hatte. Gelohnt hat es sich aber allemal.&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/froscon-2012</link>
                <guid>http://kowalski.gd/blog/froscon-2012</guid>
                <pubDate>2012-08-27T23:02:00+01:00</pubDate>
        </item>

        <item>
                <title>Ende der "Sommerpause"</title>
                <description>&lt;p&gt;Die Sommerpause ist vorüber. Wie jedes Jahr habe ich auch diesen Sommer eine kleine &amp;quot;Sommerpause&amp;quot; gemacht:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Kein bloggen und kaum Usergroups.&lt;/li&gt;
&lt;li&gt;Stattdessen verstärkt in Open Source Projekten engagieren und ab und zu am Elbstrand den Sonnenuntergang genießen.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unter anderem sind entstanden:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;eine JSON API für &lt;a href=&quot;https://github.com/frab/&quot;&gt;frab&lt;/a&gt;. Frab ist eine Anwendung zur Planung von Konferenzen. Die API kam das erste Mal für programm.froscon.de auf der &lt;a href=&quot;http://froscon.de&quot;&gt;FrOSCon 2012&lt;/a&gt; zum Einsatz&lt;/li&gt;
&lt;li&gt;zahlreiche pull-requests für &lt;a rel=&quot;nofollow&quot; href=&quot;https://github.com/Graylog2&quot;&gt;Graylog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a rel=&quot;nofollow&quot; href=&quot;https://github.com/robertkowalski/gelf-node&quot;&gt;gelf-node&lt;/a&gt;: Graylog Nachrichten für node.js Server&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mirhampt/node-recaptcha&quot;&gt;node-recaptcha&lt;/a&gt; Pull Requests für ein recaptcha modul&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/enyojs/&quot;&gt;Enyo und Onyx&lt;/a&gt; Kleinere Pull Requests für das Enyo JavaScript Application Framework&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Außerdem bauten ein Kollege und ich den &lt;a href=&quot;/blog/2012/10/18/der-freibierfinder/&quot;&gt;Freibierfinder&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nachdem nun die PHP Unconference überstanden wurde und die FrOSCon auch vorüber ist gelobe ich wieder öfter zu bloggen - bis zum nächsten Sommer.&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/ende-der-sommer-pause</link>
                <guid>http://kowalski.gd/blog/ende-der-sommer-pause</guid>
                <pubDate>2012-08-27T22:40:00+01:00</pubDate>
        </item>

        <item>
                <title>SEO: noindex für Octopress</title>
                <description>&lt;p&gt;Heute habe ich mein Blogging-Framework Octopress um noindex-Metatags erweitert.&lt;/p&gt;

&lt;p&gt;Anwendungsfall ist meine Impressumsseite, die nicht indexiert werden soll.&lt;/p&gt;

&lt;!-- more--&gt;

&lt;p&gt;In der Datei &lt;code&gt;source/_includes/head.html&lt;/code&gt; von Octopress fügt man ein:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{% if page.noindex %} &amp;lt;meta name=&amp;quot;robots&amp;quot; content=&amp;quot;noindex&amp;quot;&amp;gt; {% endif %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ab jetzt kann man im Markdown der Seite / des Posts &lt;strong&gt;noindex: true&lt;/strong&gt; setzen und die Seite wird nicht mehr indexiert, da im Head das entsprechende Metatag gesetzt wird.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/seo_noindex.png&quot; alt=&quot;Screenshot noindex settings octopress&quot; title=&quot;Screenshot noindex settings octopress&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/seo-noindex-fur-octopress</link>
                <guid>http://kowalski.gd/blog/seo-noindex-fur-octopress</guid>
                <pubDate>2012-06-22T20:45:00+01:00</pubDate>
        </item>

        <item>
                <title>Geolocation für Enyo</title>
                <description>&lt;p&gt;Heute Nacht habe ich eine Enyo Komponente für Geolocation released. Die Komponente ist Phonegap kompatibel, wurde aber auch für Chrome und Firefox getestet.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Mit ihr kann einmalig die aktuelle Position abfragen, oder auch auf Positionswechsel &amp;quot;lauschen&amp;quot;.&lt;/p&gt;

&lt;p&gt;Inklusive Anwendunsgbeispiel und allen Optionen findet man alles auf
&lt;a href=&quot;https://github.com/robertkowalski/enyo-geolocation&quot; rel=&quot;nofollow&quot;&gt;https://github.com/robertkowalski/enyo-geolocation&lt;/a&gt;.&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/geolocation-for-enyo</link>
                <guid>http://kowalski.gd/blog/geolocation-for-enyo</guid>
                <pubDate>2012-05-13T14:15:00+01:00</pubDate>
        </item>

        <item>
                <title>Cross-Platform-Development mit Titanium</title>
                <description>&lt;p&gt;Nachdem ich mir Anfang 2011 schon einmal Titanium von Appcelerator (nur in Bezug auf Android) angesehen hatte, wollte ich mir nun noch einmal ein Bild von Titanium machen. Laut einer Präsentation bei der JavaScript Usergroup und nach Austausch mit Kollegen soll sich seit damals viel getan haben.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Ich baue eine kleine App, ausschließlich erst einmal für das iPhone: ein Kollege fotografiert sehr gut und hat einen sehr empfehlenswerten &lt;a href=&quot;http://www.flickr.com/photos/zanthia/&quot;&gt;flickr-Fotostream&lt;/a&gt;. Warum also nicht eine Fotostream App bauen und dabei Titanium besser kennenlernen?&lt;/p&gt;

&lt;h2&gt;Entwicklung&lt;/h2&gt;

&lt;p&gt;Für Titanium Apps ist JavaScript die Ausgangsbasis.&lt;/p&gt;

&lt;p&gt;Titanium Apps benutzen mit Hilfe von JavaScript-Code native iOS oder Android Komponenten, der JavaScript-Code wird von einem JavaScript-Interpreter interpretiert. Das Konzept ist somit etwas anders als bei Phonegap Apps, die in einem WebView ausgeführt werden.&lt;/p&gt;

&lt;p&gt;Titanium kann um weitere native Komponenten erweitert werden, die zum Beispiel in Objective C geschrieben sind und über eine Verbindungseinheit in JavaScript besitzen. Dies ist grundsätzlich auch bei Phonegap möglich. Doch wie bereits erwähnt laufen Phonegap Apps hauptsächlich in einem WebView, ohne native UI-Elemente.&lt;/p&gt;

&lt;p&gt;Bei Titanium helfen Module beim Gliedern der App. Hier finden die aus CommonJS und auch aus node.js bekannten Module mit &lt;code&gt;exports&lt;/code&gt; und &lt;code&gt;require&lt;/code&gt; Anwendung.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Definition des Moduls in der ExampleFile.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exampleModule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;I am a Module&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exampleModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Import und Benutzung in der Foo.js&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exampleFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./ExampleFile&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;exampleFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; &amp;quot;I am a Module&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Die einzelnen Module lassen sich dann bestimmt auch relativ gut Unit-Testen. Ein festes Konzept oder Integration von Unit-Tests im Titanium Framework habe ich leider nicht entdecken können.&lt;/p&gt;

&lt;p&gt;Im allgemeinen war der Prototyp relativ schnell gehackt. Die App ist, ohne auf jedes Detail einzugehen, im Prinzip ein AJAX-Request und die Erstellung einer Coverflow-Gallerie.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// AJAX Client&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Titanium&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createHTTPClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;// Antwort-JSON verabeiten, Coverflow erstellen,&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;// Activity Spinner anhalten, Eventhandler registrieren...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ti&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iOS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createCoverFlowView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;images&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;backgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#000&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;30px&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;90%&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;change&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;labelTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Detail-View öffnen etc.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Der Event-Listener &lt;code&gt;change&lt;/code&gt; kümmert sich um neue Titel bei wischen über die Bilder - der Event-Listener, der auf das &lt;code&gt;click&lt;/code&gt; -Event lauscht, ruft eine Detailseite auf, die eine etwas größere Version des Bildes anzeigt.&lt;/p&gt;

&lt;h2&gt;iOS &amp;amp; Android - alles gleich?&lt;/h2&gt;

&lt;p&gt;Auch wenn Titanium mit &amp;quot;einer Codebasis für viele Plattformen&amp;quot; wirbt, gibt es dennoch einige Unterschiede.&lt;/p&gt;

&lt;p&gt;Die Kompilierungszeit ist mit dem iOS SDK und iOS Emulator sehr angenehm im Gegensatz zu Android, was aber an dem Android Emulator und des Kompilierungvorgangs des Android SDKs liegt und kein Verschulden von Titanium ist.&lt;/p&gt;

&lt;p&gt;Es gibt für iOS einige UI-Komponenten, die nicht für Android verfügbar sind. Will man also mit der exakt gleichen Codebasis Android und iOS bedienen, muss man sich für die Android Version etwas anderes einfallen lassen und eine Sondervariante mit Weiche im Code einbauen.&lt;/p&gt;

&lt;h2&gt;Fazit&lt;/h2&gt;

&lt;p&gt;Innerhalb von ein paar Stunden hatte ich Titanium installiert, meinen Flickr API Key beantragt und den ersten Prototypen zur Photo-App von Zanthia&amp;#39;s Photostream fertig. Der von mir benutzte Coverflow für die Bildergalerie ist für Android nicht verfügbar - hier müsste für Android eine andere Lösung gefunden werden.&lt;/p&gt;

&lt;p&gt;Die App war schnell fertig und läuft super. Das iOS Element &amp;quot;Coverflow&amp;quot; hätte man mit HTML5 nicht so performant realisieren können.&lt;/p&gt;

&lt;p&gt;Für Prototypen, sehr kleine Apps oder Teams mit zusätzlichen nativen Entwicklern also durchaus eine Alternative.&lt;/p&gt;

&lt;h2&gt;Demovideo&lt;/h2&gt;

&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/ofZ1461cpf8&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;Sourcecode&lt;/h2&gt;

&lt;p&gt;Wie immer gibt es den
&lt;a href=&quot;https://github.com/robertkowalski/titanium-flickr/blob/master/Resources/ui/handheld/ApplicationWindow.js&quot; rel=&quot;nofollow&quot;&gt;Sourcecode auf github&lt;/a&gt;. Meinen Flickr API Key habe ich aus dem Code entfernt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/aae1049f37ad4d83913ba9bde1d02c69&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/cross-platform-development-mit-titanium</link>
                <guid>http://kowalski.gd/blog/cross-platform-development-mit-titanium</guid>
                <pubDate>2012-04-30T18:20:00+01:00</pubDate>
        </item>

        <item>
                <title>Tutorial: Die erste App mit EnyoJS</title>
                <description>&lt;p&gt;EnyoJS ist ein JavaScript Framework, welches ursprünglich von HP für das Touchpad Tablet zur Erstellung von webOS-Apps benutzt wurde.
Mittlerweile ist es als Open-Source Cross-Platform-Lösung (Apache Lizenz) der Öffentlichkeit zugänglich gemacht worden und erinnert in der JavaScript lastigen Handhabung eher an Sencha statt an markup-lastige Frameworks wie jQuery Mobile. Mit Onyx ist einen Monat nach dem Core-Framework nun der erste Teil von Widgets für Enyo released worden.&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;position:relative;margin:10px;height:430px;float:right;&quot; src=&quot;/assets/images/enyo_blog_article/3_-_App.png&quot; alt=&quot;Screen Phonegap&quot; /&gt; Wir werden eine kleine App mit Hilfe von Enyo bauen und uns dabei das Framework genauer anschauen. Ziel ist eine App (Phonegap) für iPhone und Android. Doch auch deren Browser und letzendlich Desktop PCs können bedient werden.&lt;/p&gt;

&lt;p&gt;Das heutige Thema wird vor allem die Weintrinker freuen, denn wir werden eine Weinverwaltung für unseren Weinkeller bauen. Natürlich werden auch die ganz frisch erschienenen Onyx Widgets benutzt. Wer kein Weintrinker ist, der kann die App leicht zu einer Verwaltung für andere Dinge adaptieren.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Enyo möchte mit dem Konzept von sogenannten &lt;em&gt;Kinds&lt;/em&gt; Modularität und Kapselung erreichen. Mit Enyo entwickelt man zuerst im Web-Browser, später macht man dann Feinanpassungen für die jeweiligen Plattformen auf den jeweiligen Endgeräten wie zum Beispiel Smartphone oder Tablet.&lt;/p&gt;

&lt;h2&gt;Hallo Enyo&lt;/h2&gt;

&lt;p&gt;Die einfachste Anwendung, die in Enyo denkbar ist, wäre wie in eigentlich allen Sprachen eine einfache &amp;quot;Hello World&amp;quot; Anwendung. Es liegt für jeden Teil des Tutorials Sourcecode vor, zur Referenz und im ersten Schritt als Template für unsere App, um schnell starten zu können.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/robertkowalski/enyoJS-Bootcamp&quot; rel=&quot;nofollow&quot;&gt;github repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/robertkowalski/enyoJS-Bootcamp/downloads&quot; rel=&quot;nofollow&quot;&gt;github - download as zip/tarball&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Wir starten unsere &lt;code&gt;index.html&lt;/code&gt; aus &lt;code&gt;1a - App Template und Hello Enyo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Mit Hilfe unserer Developer Konsole erstellen wir adhoc ein &amp;quot;Kind&amp;quot; in Enyo:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enyo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Control&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi Enyo!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;renderInto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/enyo_blog_article/1_-_App_Template_-_Konsole.png&quot; alt=&quot;Developer Konsole Screenshot&quot; title=&quot;Developer Konsole Screenshot&quot;&gt;&lt;/p&gt;

&lt;p&gt;welches, wie wir sehen, direkt zu einem div rendert:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;enyo-fit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;control2&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Hi Enyo!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/enyo_blog_article/1_-_App_Template_-_html_inspector.png&quot; alt=&quot;Developer Konsole Screenshot&quot; title=&quot;HTML Inspector Screenshot&quot;&gt;&lt;/p&gt;

&lt;p&gt;Der Befehl &lt;code&gt;renderInto()&lt;/code&gt; rendert ein Kind in einen bestimmten DOM-Knoten, in diesem Fall den body unseres HTML-Dokuments.&lt;/p&gt;

&lt;p&gt;Nach diesem ersten schnellen, einfachen Einstieg wollen wir einmal ein richtiges Kind schreiben.&lt;/p&gt;

&lt;h2&gt;Dependencies mit depends.js&lt;/h2&gt;

&lt;p&gt;Wir erstellen schnell eine &lt;code&gt;Bottle.js&lt;/code&gt;, die wir in den Ordner &lt;code&gt;source&lt;/code&gt;  speichern und eine leere &lt;code&gt;App.css&lt;/code&gt; im Ordner &lt;code&gt;style&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Wem dieser und die folgenden Schritte zu lästig sind: keine Bange, einfach das git repository auschecken und mit &lt;code&gt;1b - App Template mit package.js&lt;/code&gt; im nächsten Kapitel weitermachen.&lt;/p&gt;

&lt;p&gt;Nachdem wir unsere Dateien haben, erweitern wir unser Template um eine &lt;code&gt;package.js&lt;/code&gt;. Die &lt;code&gt;package.js&lt;/code&gt; wird diese und alle weiteren CSS-Styles und den Sourcecode von unseren Kinds referenzieren. Zusätzlich dazu habe ich die neu erschienenen Onyx-Styles und Kinds hinzugefügt.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;enyo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;depends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;./enyo/onyx/onyx.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;./enyo/onyx/onyx.css&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;./style/App.css&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;./source/Bottle.js&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enyo wird die Dateien beim Start der Anwendung automatisch laden.&lt;/p&gt;

&lt;p&gt;Die &lt;code&gt;package.js&lt;/code&gt; laden wir einfach im head unserer &lt;code&gt;index.html&lt;/code&gt;, den Rest macht Enyo für uns:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Enyo App Template&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;./enyo/enyo.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;./enyo/enyo.css&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;./package.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Zu finden ist das ganze unter &lt;code&gt;1b - App Template mit package.js&lt;/code&gt; und wird die Basis für all unsere weiteren Experimente sein.&lt;/p&gt;

&lt;h2&gt;Die Weinflasche&lt;/h2&gt;

&lt;p&gt;Wir wollen nun unser erstes komplettes Kind schreiben. In unserer Weinlagerverwaltung liegen Weinflaschen. Jede Weinflasche stellt eine Entität in unserem Weinkeller dar. Wir modellieren nun also zuerst eine Flasche, jede Flasche hat ein Jahr sowie einen Namen. Zu finden ist alles in &lt;code&gt;2a - Der Wein&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;enyo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;wine.Bottle&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enyo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Control&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;padding: 10px&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;published&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;wineYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;span&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;wineYear&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;margin-right: 10px&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;span&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;wineName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;margin-right: 10px&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inherited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineBottleChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wineBottleChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ein Kind wird in Enyo mit Hilfe von &lt;code&gt;enyo.kind&lt;/code&gt; definiert. Dieses Kind hier erbt wiederrum vom Kind &lt;code&gt;enyo.Control&lt;/code&gt;. Benannt wurde das Kind &lt;code&gt;wine.Bottle&lt;/code&gt;. Der Punkt sorgt hier für ein Namespacing.&lt;/p&gt;

&lt;p&gt;Mit &lt;code&gt;classes&lt;/code&gt; und &lt;code&gt;style&lt;/code&gt; gibt man in Enyo CSS-Klassen beziehungsweise CSS-Styles für die Kinds an.&lt;/p&gt;

&lt;p&gt;Kinds können weitere Kinds in sich schachteln. Diese können auch wieder weitere Kinds in sich schachteln.
Verschachtelte Elemente werden unter &lt;code&gt;components&lt;/code&gt; eingetragen.&lt;/p&gt;

&lt;p&gt;Wir haben hier unter &lt;code&gt;components&lt;/code&gt; zwei Elemente, die als span-Elemente rendern sollen (festgelegt mit &lt;code&gt;tag: &amp;quot;span&amp;quot;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Die beiden Elemente haben jeweilig die Namen wineYear und wineName, mit denen man später auf sie zugreifen kann. Innerhalb von unserem Kind greift man auf diese Elemente mit Hilfe von &lt;code&gt;this.$.&lt;/code&gt; zu. Später dazu mehr.&lt;/p&gt;

&lt;p&gt;Beim Erstellen eines Kinds wird die Methode &lt;code&gt;create&lt;/code&gt; automatisch aufgerufen. Es gibt auch die Methoden &lt;code&gt;contructor&lt;/code&gt; und &lt;code&gt;rendered&lt;/code&gt;, die überschrieben werden könnten, aber diese Methoden werden wir hier nicht verwenden.&lt;/p&gt;

&lt;p&gt;Wir rufen über die &lt;code&gt;create&lt;/code&gt;-Methode per &lt;code&gt;this.wineBottleChanged();&lt;/code&gt;  die Methode &lt;code&gt;wineBottleChanged&lt;/code&gt; auf, hier passiert sehr viel: wir adressieren mit &lt;code&gt;this.$&lt;/code&gt; und den von uns festgelegten Namen unsere Komponenten.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wir ändern ihren Inhalt mit Hilfe von &lt;code&gt;setContent&lt;/code&gt; auf die Werte unserer öffentlichen, nach außen bereitgestellten Eigenschaften aus &lt;code&gt;published&lt;/code&gt;. Die Werte in &lt;code&gt;published&lt;/code&gt; können von außen gesetzt und gelesen werden.&lt;/p&gt;

&lt;p&gt;Als Referenz ist das ganze unter &lt;code&gt;2a - Der Wein&lt;/code&gt; zu finden.&lt;/p&gt;

&lt;h3&gt;Testrunde&lt;/h3&gt;

&lt;p&gt;Nachdem wir den Code in unsere &lt;code&gt;Bottle.js&lt;/code&gt; geschrieben haben, können wir mit&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bottle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wineYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Chardonnay&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;renderInto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;eine Weinflasche erstellen.&lt;/p&gt;

&lt;p&gt;Testweise können wir den Befehl in den script tags unserer index.html angegeben, die vorher leer gelassen wurden. Nun können wir die index.html im Browser öffnen um das Kind weiter zu untersuchen, hier noch einmal der Ablauf unseres Programms:&lt;/p&gt;

&lt;p&gt;Wir geben das Jahr und einen Namen für unseren Wein an, unter &lt;code&gt;published&lt;/code&gt; wurden diese öffentlichen Eigenschaften unseres Enyo Kinds festgelegt. Bei der Erstellung wird die &lt;code&gt;create&lt;/code&gt;-Methode aufgerufen und damit die Inhalte der öffentlichen Eigenschaften in den DOM geschrieben.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/enyo_blog_article/2_-_Wein.png&quot; alt=&quot;Developer Konsole Screenshot&quot; title=&quot;Eine Flasche Wein Screenshot&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Event Binding (Wein trinken)&lt;/h3&gt;

&lt;p&gt;Manchmal trinkt man einen Wein aus seinem Keller. Das wollen wir mit unserem Kind auch abbilden.&lt;/p&gt;

&lt;p&gt;Die Idee ist ein &amp;quot;entfernen&amp;quot; Button unter den &lt;code&gt;components&lt;/code&gt; des Kinds hinzuzufügen. Wir benutzen den onyx-Button aus dem onyx-Widget-Pack. Auf dem Button soll &amp;quot;getrunken&amp;quot; stehen und er bekommt die CSS-Klasse &lt;code&gt;onyx-negative&lt;/code&gt;, die den Button rot färbt.&lt;/p&gt;

&lt;p&gt;Mit &lt;code&gt;ontap&lt;/code&gt; registrieren wir ein Event, das aufs Antippen reagiert. Enyo kennt viele Events, z.B. auch das beliebte &amp;quot;Wischen&amp;quot;/Swipe.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{ kind: &amp;quot;onyx.Button&amp;quot;, content: &amp;quot;getrunken&amp;quot;,
  classes: &amp;quot;onyx-negative&amp;quot;, ontap: &amp;quot;drinkWine&amp;quot; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wenn man diesen Button drückt, soll die Methode &lt;code&gt;drinkWine&lt;/code&gt; ausgeführt werden:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;drinkWine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Das ontap-Eventbinding referenziert auf die Methode &lt;code&gt;drinkwine&lt;/code&gt;. Mit &lt;code&gt;this.destroy&lt;/code&gt; zerstört sich das Kind selbst.&lt;/p&gt;

&lt;p&gt;Hier das erweiterte Kind im Gesamten:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;enyo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;wine.Bottle&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enyo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Control&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;padding: 10px&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;div&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;published&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;wineYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;span&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;wineYear&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;margin-right: 10px&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;span&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;wineName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;margin-right: 10px&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx.Button&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;getrunken&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx-negative&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ontap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;drinkWine&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inherited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineBottleChanged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;wineBottleChanged&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;drinkWine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Den Beispielcode findet man in &lt;code&gt;2b - Wein trinken&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Getter und Setter in Enyo&lt;/h2&gt;

&lt;p&gt;Enyo liefert automatisch Getter und Setter für seine internen Kinds, beispielsweise:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Doch auch für die von uns festgelegten public-Properties werden automatisch Setter und Getter von Enyo erstellt:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bottle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wineYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Chardonnay&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getWineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1999&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setWineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2021&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getWineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2021&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 style=&quot;padding-top: 1em;&quot;&gt;Der Weinkeller&lt;/h2&gt;

&lt;p&gt;Unsere Flaschen werden von einem Weinkeller beherbergt. Also erstellen wir eine Datei mit dem Namen &lt;code&gt;Cellar.js&lt;/code&gt; und fügen die Datei der &lt;code&gt;package.js&lt;/code&gt; hinzu:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;enyo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;depends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;./enyo/onyx/onyx.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;./enyo/onyx/onyx.css&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;./style/App.css&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;./source/Bottle.js&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;./source/Cellar.js&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nach so viel Basic Input zu Enyo ist der Weinkeller für die Flaschen schnell geschrieben:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;enyo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;wine.Cellar&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;padding: 10px;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx.Input&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;inputWineYear&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Jahr&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;center&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx.Input&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;inputWineName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;center&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx.Button&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hinzufügen&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx-affirmative center&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ontap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;addWine&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;margin-top: 10px;&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;groupbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;padding-top: 10px;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx.Groupbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;showing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx.GroupboxHeader&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Weinliste&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;cellar&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inherited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;addWine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputWineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getNodeProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputWineName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getNodeProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bottle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cellar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;wineYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputWineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getNodeProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputWineName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getNodeProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// neu rendern&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cellar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// gruppe sichtbar machen&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;groupbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getShowing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;groupbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setShowing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// inputfelder zurücksetzen&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputWineName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setNodeProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputWineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setNodeProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wir definieren zwei Input Felder mit Kinds aus dem Onyx Theme. Alternativ wäre auch ganz normal&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;inputWineName&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;usw. möglich.&lt;/p&gt;

&lt;p&gt;Wir haben eine Gruppe mit Header, hier wird uns sehr viel von Enyo geschenkt. Die Gruppe ist anfangs nicht sichtbar, erreicht wird dies durch &lt;code&gt;showing: false&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;groupbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;padding-top: 10px;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;onyx.Groupbox&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;showing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;components&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Der Header in der Gruppe würde beim Start der App stören, wenn noch keine Weine vorhanden sind.&lt;/p&gt;

&lt;p&gt;Beim Drücken des &amp;quot;hinzufügen&amp;quot;-Buttons rufen wir unsere Methode &lt;code&gt;addwine&lt;/code&gt; auf.&lt;/p&gt;

&lt;p&gt;Nachdem hier überprüft wurde, dass beide input-Felder mit Inhalt gefüllt sind, erstellen wir eine neue Weinflasche innerhalb von unserem Kind mit dem Namen &lt;code&gt;cellar&lt;/code&gt;. Wir holen die Werte aus den Kinds mit &lt;code&gt;this.$.inputWineYear.getNodeProperty(&amp;quot;value&amp;quot;)&lt;/code&gt; und übergeben sie an die published-Properties unseres Weinflaschen-kinds.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bottle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cellar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;wineYear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputWineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getNodeProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;wineName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputWineName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getNodeProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Danach rendern wir alles neu und machen die unsichtbare Gruppe sichtbar, da wir nun Einträge vorzuweisen haben. Danach setzen wir die Inputfelder wieder zurück.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// neu rendern&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cellar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// gruppe sichtbar machen&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;groupbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getShowing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;groupbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setShowing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// inputfelder zurücksetzen&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputWineName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setNodeProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputWineYear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setNodeProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Zuletzt ist noch die CSS-Klasse center zu beachten, die in der Datei &lt;code&gt;App.css&lt;/code&gt; im Ordner &lt;code&gt;style&lt;/code&gt; Einzug gehalten hat.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/enyo_blog_article/3_-_App.png&quot; alt=&quot;Screen Phonegap&quot; title=&quot;Screen Phonegap&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Die App in einer Phonegap &amp;quot;Shell&amp;quot;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Ausblick&lt;/h2&gt;

&lt;p&gt;Letzendlich könnte man dieses kleine Weinkeller Beispiel bis ins unendliche aufblähen. Ich belasse es hierbei, dennoch drängt sich ein Datenspeicher zur Zwischenspeicherung unser Daten auf dem Client und einem Server quasi direkt auf.&lt;/p&gt;

&lt;h2&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/robertkowalski/enyoJS-Bootcamp&quot; rel=&quot;nofollow&quot;&gt;Sourcecode auf github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://enyojs.com/&quot;&gt;Enyo Javascript Framework&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/e8931362482b4da680fec6b5110bcb17&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/tutorial-die-erste-app-mit-enyojs</link>
                <guid>http://kowalski.gd/blog/tutorial-die-erste-app-mit-enyojs</guid>
                <pubDate>2012-03-21T20:41:00+00:00</pubDate>
        </item>

        <item>
                <title>Kurzvorstellung: Screen Scraping mit node & jsdom</title>
                <description>&lt;p&gt;Ein sehr praktisches Tool ist &lt;a href=&quot;https://github.com/tmpvar/jsdom&quot;&gt;jsdom&lt;/a&gt;, ein Modul von Elijah Insua für node.js.
Jsdom bringt das DOM zu node.js und es lassen sich tolle Screen Scraper und andere Tools für die Konsole bauen.&lt;/p&gt;

&lt;p&gt;Man munkelt, einige geben sich damit sogar den aktuellen Fahrplan des jeweiligen Personen-Nahverkehrs auf ihrer Shell aus.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Ich möchte jsdom hier einmal ganz kurz vorstellen und zeigen, wie schnell ich die Titel der Artikel von Startseite
meines Blogs auf meiner Shell ausgeben kann.
Natürlich sind noch viele andere nützliche Szenarien oder Anwendungsfälle denkbar, jedoch sollte man das deutsche Urheberrecht im Hinterkopf
behalten.&lt;/p&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;p&gt;Man installiert jsdom mit Hilfe von npm:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm install jsdom&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Sollte man den Fehler bekommen &lt;code&gt;node-waf&lt;/code&gt; würde fehlen, so sollte man das Paket &lt;code&gt;nodejs-dev&lt;/code&gt; nachinstallieren.&lt;/p&gt;

&lt;h2&gt;Beispielprogramm&lt;/h2&gt;

&lt;p&gt;Wie bereits erwähnt wollen wir hier ganz schnell Elemente meines Blogs scrapen.&lt;/p&gt;

&lt;p&gt;Ein typischer jsdom-Aufruf besteht als erstes immer aus der Zielurl.&lt;/p&gt;

&lt;p&gt;Als zweite Angabe folgen dann gewünschte Libraries wie jQuery, die geladen werden können und zur Interaktion mit dem DOM benutzt werden.&lt;/p&gt;

&lt;p&gt;Als letztes Argument folgt dann eine Callback-Funktion, die aufgerufen wird, wenn wir unser DOM und die Library geladen haben.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jsdom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;jsdom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;jsdom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;http://robert-kowalski.de&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://code.jquery.com/jquery-1.7.1.min.js&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listAllArticles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;listAllArticles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;article&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;header&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Und schon bekomme ich mit &lt;code&gt;$ node blogscraper.js&lt;/code&gt; meine Artikeltitel auf der Startseite von robert-kowalski.de angezeigt:&lt;/p&gt;

&lt;pre&gt;
  Cross platform Test Driven Development (TDD) mit Jasmine, jQuery Mobile, Phonegap und node
  Private und Public in JavaScript
&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/ce3f753e3e204c2b9519b7c639467e3e&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/kurzvorstellung-screen-scraping-mit-jsdom</link>
                <guid>http://kowalski.gd/blog/kurzvorstellung-screen-scraping-mit-jsdom</guid>
                <pubDate>2012-03-11T01:14:00+00:00</pubDate>
        </item>

        <item>
                <title>Cross-Platform Test Driven Development (TDD) mit Jasmine, jQuery Mobile, Phonegap und node</title>
                <description>&lt;p&gt;Über die Feiertage packte mich mein Entwicklerdrang, einmal eine WebApp / App komplett Testdriven zu schreiben
und dabei &lt;a href=&quot;http://pivotal.github.com/jasmine/&quot;&gt;Jasmine von Pivotal Labs&lt;/a&gt; in der Praxis auszuprobieren.&lt;/p&gt;

&lt;p&gt;Herausgekommen ist eine TDD entwickelte Phonegap App sowie ein node Webservice.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Wenn man neues Terrain betritt, ist es ganz praktisch, ein nicht zu großes Projekt zu wählen, mit dem man erste Erfahrungen sammeln kann. So fiel meine Wahl auf den Sensor in der Tür des CCC Hamburg, der den Türstatus für alle ohne Schlüssel zu den Räumlichkeiten übermittelt. Zudem gibt es einen Dienst der die Anzahl der verbundenen DHCP Clients ins Netz stellt.&lt;/p&gt;

&lt;p&gt;Für das TDD wählte ich wie schon erwähnt Jasmine von Pivotal Labs, das wie ich finde eine sehr schöne, deklarative Syntax besitzt.&lt;/p&gt;

&lt;p&gt;Beim Test Driven Development schreibt man erst den Test und danach den Code, optimalerweise entsteht der Produktivcode im Test selbst und man baut im Anschluss seine Methode daraus.&lt;/p&gt;

&lt;p&gt;Die wohl am meisten genutzte Funktion ist &lt;code&gt;.toEqual()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Ein typischer fertiger Test sieht dann so aus:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;should add a leading 0 to numbers under 10&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dateHelper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;01&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dateHelper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;10&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;** Das Entwickeln ist zwar erst ungewohnt, aber mit der Zeit entwickelt man schneller, produziert weniger Bugs und geht gelassen mit unerwarteten Änderungen am Code um. **&lt;/p&gt;

&lt;p&gt;Als Cross Platform Lösung habe ich mich an jQuery Mobile bedient, anlässlich des 1.0 Releases.
Es ging anfangs schnell von der Hand, hinterließ aber einen etwas unreifen Eindruck.&lt;/p&gt;

&lt;h2&gt;Verschiedene Plattformen mit einer Codebasis bedienen&lt;/h2&gt;

&lt;p&gt;Als ich meine &lt;a href=&quot;https://github.com/robertkowalski/doorisMobile-base&quot; rel=&quot;nofollow&quot;&gt;Codebasis&lt;/a&gt;
hatte, installierte ich XCode und Phonegap und hatte nach kurzer Zeit meine mobile
&lt;a href=&quot;https://github.com/robertkowalski/doorisMobile-phonegap&quot; rel=&quot;nofollow&quot;&gt;iPhone App&lt;/a&gt;
im iPhone Simulator. Im Footerbereich musste ich noch etwas CSS anpassen, was im Browser so nicht ersichtlich war,
aufgrund fehlerhaften Verhaltens oder Doku von jQuery Mobile.&lt;/p&gt;

&lt;p&gt;Danach habe ich einen &lt;a href=&quot;https://github.com/robertkowalski/doorisMobile-node&quot; rel=&quot;nofollow&quot;&gt;node Webservice&lt;/a&gt; aufgesetzt, mit Hilfe des berühmten Express.&lt;/p&gt;

&lt;p&gt;&lt;s&gt;Den Webservice findet man mittlerweile auf heroku.&lt;/s&gt;&lt;/p&gt;

&lt;p&gt;Durch die vorhandene Codebasis für die Phonegap App musste ich die Views nur noch an die Jade Template Engine anpassen und Cache Manifeste erstellen. Außerdem mussten die Textfiles, die von anderen Servern kamen, wegen Cross-Site-Origin Sicherheitsregeln mit Hilfe der node app &amp;quot;geproxied&amp;quot; werden.&lt;/p&gt;

&lt;h2&gt;Lessons Learned&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Vorteile:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ich bin mit einer Codebasis gestartet, die ich dann ohne viel Aufwand als App aufs iPhone mit Phonegap bringen konnte und später damit einen node.js Webservice bei heroku aufsetzen konnte.&lt;/p&gt;

&lt;p&gt;Jasmine hat sich auch in der Praxis eines Projektes als solides, ausgewachsenes Testframework bewiesen, das durch selbstsprechende Syntax überzeugt.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nachteile:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ich habe das mobile Framework jQuery Mobile ausprobiert, das trotz 1.0 Release einige Bugs aufweist
(Buttons im Footer bei mir, &lt;strong&gt;über 500 Issues auf github&lt;/strong&gt;). Außerdem zerstört das ein- und ausblenden des Headers
und des Footers beim scrollen das &amp;quot;native-Experience&amp;quot; komplett.&lt;/p&gt;

&lt;p&gt;Auch scheint mir die Größe von jQuery und jQuery mobile für eine mobile Seite zu groß, wenn man bedenkt, daß viele mobile Web User in EDGE/GPRS Gegenden unterwegs sind.&lt;/p&gt;

&lt;h2&gt;Sourcecode&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/robertkowalski/doorisMobile-base&quot; rel=&quot;nofollow&quot;&gt;Code der BasisApp&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/robertkowalski/doorisMobile-phonegap&quot; rel=&quot;nofollow&quot;&gt;Code für Phonegap&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/robertkowalski/doorisMobile-node&quot; rel=&quot;nofollow&quot;&gt;Code für node&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Andere Links&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tryjasmine.com&quot;&gt;Jasmine im Browser ausprobieren&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://vg09.met.vgwort.de/na/c41ee1d9211d420e8a762d0d850762df&quot; width=&quot;1&quot; height=&quot;1&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/cross-platform-test-driven-development-tdd-mit-jasmine-jquery-mobile-und-node</link>
                <guid>http://kowalski.gd/blog/cross-platform-test-driven-development-tdd-mit-jasmine-jquery-mobile-und-node</guid>
                <pubDate>2012-01-02T22:42:00+00:00</pubDate>
        </item>

        <item>
                <title>Private und Public in JavaScript</title>
                <description>&lt;p&gt;Heute werfen wir einen Blick auf Public und Private Methoden in JavaScript, denn viele Entwickler denken, dass es keine privaten Methoden/Eigenschaften in JavaScript gibt.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Man schreibt nur kein private vor die Methoden / Eigenschaften, wie in vielen anderen Sprachen, die klassenbasiert sind.&lt;/p&gt;

&lt;p&gt;Schauen wir uns das ganze mit dem Beispiel eines Top-Spions an, das man leicht in der Chrome Konsole oder im Firebug ausprobieren kann:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Spy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// @private&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hans&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Neuer Name: &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//Interface&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// @public&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Peter&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;setPrivateName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// hat Zugriff auf die privaten Variablen / Methoden&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;getPrivateName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Private Eigenschaft: &amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot; - Privater Getter: &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Peter ist nämlich Geheimagent und hat einen Namen, sowie einen Decknamen.
Doch er fliegt während einer Operation auf und benötigt einen neuen Namen.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Spy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// =&amp;gt; undefined&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//=&amp;gt;  &amp;quot;Peter&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Versuch auf private Methode zuzugreifen&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//=&amp;gt; TypeError: Object #&amp;lt;Object&amp;gt; has no method &amp;#39;getName&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Georg der Spion&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// =&amp;gt; TypeError: Object #&amp;lt;Object&amp;gt; has no method &amp;#39;setName&amp;#39;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Über das Interface&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getPrivateName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// =&amp;gt; &amp;quot;Private Eigenschaft: Hans - Privater Getter: Hans&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPrivateName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  =&amp;gt; &amp;quot;Neuer Name: Tom&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// =&amp;gt; &amp;quot;Peter&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getPrivateName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// =&amp;gt; &amp;quot;Private Eigenschaft: Tom - Privater Getter: Tom&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Letzendlich hoffe ich, ich konnte einen kleinen Einblick in JavaScript vermitteln.&lt;/p&gt;
</description>
                <link>http://kowalski.gd/blog/private-und-public-in-javascript</link>
                <guid>http://kowalski.gd/blog/private-und-public-in-javascript</guid>
                <pubDate>2011-09-25T00:00:00+01:00</pubDate>
        </item>


</channel>
</rss>
